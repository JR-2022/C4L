{
  "openapi": "3.0.3",
  "info": {
    "title": "Cloud4Log API",
    "version": "1.2.0",
    "description": "The documented API is used by the frontend hosted on cloud4log.com. If you have valid login credentials you can start right away by using the button \"Authorize\". You can then start to call the API. The login request will respond with a organisation side-ID. You need this and ID for most of the requests, for example upload a delivery note into the sites delivery note pool: POST /organization-sites/{organizationSiteKey}/delivery-notes/pdf/{fileName}. Endpoints can appear multiple times, when they have more than one tag. See this Github repository to import the API directly into swagger and to see releases and changelogs: https://github.com/JR-2022/C4L"
  },
  "servers": [
    {
      "url": "/api/v2"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/organizations/{organizationKey}/load-carrier-templates": {
      "get": {
        "description": "Get all permitted load carrier templates of this organization.\n",
        "summary": "Get all load carrier templates of organization",
        "operationId": "getLoadCarrierTemplates",
        "x-dls-requiredOrganizationPermission": "loadcarrier_templates_read",
        "tags": [
          "load carrier templates"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Load carrier types",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLoadCarrierTemplatesResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignor/delivery-note-bundles/signature-pads/checkout": {
      "post": {
        "summary": "Create signature pad for checkout",
        "description": "Create new signature pad for checkout.\n",
        "operationId": "postConsignorSignaturePad",
        "x-dls-requiredOrganizationSitePermission": "signature_pads_create",
        "tags": [
          "signature pads"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostConsignorSignaturePad"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "One signature pad instance. Valid for 10 minutes.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSignaturePadResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/checkins/{checkinKey}/signature-pads": {
      "post": {
        "summary": "Create signature pad for checkin",
        "description": "Create new signature pad for checkin.\n",
        "operationId": "postConsigneeSignaturePad",
        "x-dls-requiredOrganizationSitePermission": "signature_pads_create",
        "tags": [
          "signature pads"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/checkinKeyParam"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "One signature pad instance. Valid for 10 minutes.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSignaturePadResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignor/delivery-note-bundles/{deliveryNoteBundleKey}/signature-pads/checkout/signature": {
      "get": {
        "summary": "Get signature pad for checkout",
        "description": "Get a signature from a signature pad for checkout.\nThe token is the getToken from the signature pad creation request.\n",
        "operationId": "getConsignorSignatureFromSignaturePad",
        "x-dls-requiredOrganizationSitePermission": "signature_pads_read",
        "tags": [
          "signature pads"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteBundleKeyParam"
          },
          {
            "$ref": "#/components/parameters/TokenTypeParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PNGFileResponse"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/checkins/{checkinKey}/signature-pads/signature": {
      "get": {
        "summary": "Get signature pad for checkin",
        "description": "Get a signature from a signature pad for checkin.\nThe token is the getToken from the signature pad creation request.\n",
        "operationId": "getConsigneeSignatureFromSignaturePad",
        "x-dls-requiredOrganizationSitePermission": "signature_pads_read",
        "tags": [
          "signature pads"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/checkinKeyParam"
          },
          {
            "$ref": "#/components/parameters/TokenTypeParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PNGFileResponse"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/administration/organizations/{organizationKey}/api-keys": {
      "post": {
        "deprecated": true,
        "summary": "creates a API key",
        "description": "Deprecated: Please use /administration/organizations/{organizationKey}/api-users-keys\nCreates an API user for the specified organization sites with\nthe specified permissions.\nReturns a sessionId that can't received a second time.\n",
        "operationId": "createApiKeyForOrganizationSites",
        "x-dls-requiredOrganizationPermission": "api_keys_create",
        "tags": [
          "administration"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "API key successful created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostApiUserResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "get": {
        "summary": "Get list of all API keys for organization",
        "description": "Get a list of all API keys for the given organization\n",
        "operationId": "getApiKeysForOrganization",
        "x-dls-requiredOrganizationPermission": "api_keys_read",
        "tags": [
          "administration"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "result from operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiUsers"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/administration/organizations/{organizationKey}/api-users-keys": {
      "post": {
        "summary": "creates a API key",
        "description": "Create a new api user and add this api user to the organization and the given organization sites\nand equip the new api user with permissions according to the given roles for each site.\nThe requesting user must have access to the organization the api new user is added.\nReturns a sessionId that can't received a second time.\n",
        "operationId": "createApiKeyForOrganizationSitesWithRoles",
        "x-dls-requiredOrganizationPermission": "api_keys_create",
        "tags": [
          "administration"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiUserForOrganizationAdminRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "API key successful created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostApiUserResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/administration/organizations/{organizationKey}/api-keys/{userKey}": {
      "put": {
        "deprecated": true,
        "summary": "Set new permissions for API key",
        "description": "Deprecated: Please use /administration/organizations/{organizationKey}/api-users-keys/{userKey}\nNew permissions are set based on the given roles and organization sites.\nYou can also edit the API key user properties.\n",
        "operationId": "putApiKeyForOrganization",
        "x-dls-requiredOrganizationPermission": "api_keys_modify",
        "tags": [
          "administration"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationKeyParam"
          },
          {
            "$ref": "#/components/parameters/userKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiUserRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "API key successfully patched"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/administration/organizations/{organizationKey}/api-users-keys/{userKey}": {
      "put": {
        "summary": "Set new permissions for API key",
        "description": "New permissions are set based on the given roles and organization sites.\nYou can also edit the API key user properties.\n",
        "operationId": "putApiKeyForOrganizationWithRoles",
        "x-dls-requiredOrganizationPermission": "api_keys_modify",
        "tags": [
          "administration"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationKeyParam"
          },
          {
            "$ref": "#/components/parameters/userKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiUserForOrganizationAdminRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "API key successfully patched"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/administration/organizations/{organizationKey}/organization-sites": {
      "post": {
        "summary": "Create new organization site",
        "description": "Create a new organization site, which belongs to {organizationKey}\nAll organization admins (which have the role 'organization_admin')\ngain the roles organization_admin and site_admin\non the new create organization site\n",
        "operationId": "postAdministrationOrganizationSite",
        "x-dls-requiredOrganizationPermission": "administration_organization_sites_create",
        "tags": [
          "administration"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostPatchOrganizationSiteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created organization site",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationSite"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "get": {
        "summary": "Get all organization sites of the organization.",
        "description": "Get all organization sites of the organization.\nAlso returns archived sites and the date when the site was archived.\n",
        "operationId": "getAdministrationOrganizationSites",
        "x-dls-requiredOrganizationPermission": "administration_organization_sites_read",
        "tags": [
          "administration"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Created organization site",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationSite"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/administration/organization-sites/{organizationSiteKey}": {
      "patch": {
        "summary": "Modify organization site",
        "description": "Modify an existing organization site.\nCurrently all properties are required.\nIn a later update all properties become optional.\n",
        "operationId": "patchAdministrationOrganizationSite",
        "x-dls-requiredOrganizationSitePermission": "administration_organization_sites_modify",
        "tags": [
          "administration"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostPatchOrganizationSiteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Modified organization site",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationSite"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "delete": {
        "summary": "Archive organization site",
        "description": "Archives an organization site. After this request, the site is marked as archived.\nOnly read operations are possible after archive.\nTODO: A delete job will delete the site, if the site is no longer needs in supply chains and other.\n",
        "operationId": "archiveAdministrationOrganizationSite",
        "x-dls-requiredOrganizationSitePermission": "administration_organization_sites_archive",
        "tags": [
          "administration"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Archived organization site",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationSite"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/administration/organization-sites/{organizationSiteKey}/remote-accesses": {
      "post": {
        "summary": "share remote access to another site",
        "description": "Share remote access to another site. The users of the remote site\ncan have the remote_* roles. The shared organization site must have\nenabled the flag allowRemoteAccess.\n",
        "operationId": "postAdministrationRemoteAccessToSite",
        "x-dls-requiredOrganizationSitePermission": "administration_organization_sites_remote_access_create",
        "tags": [
          "administration"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostAdministrationOrganizationSitesRemoteAccessRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Remote site access is authorized."
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "get": {
        "summary": "Get all remote site accesses",
        "description": "Get all remote site accesses\n",
        "operationId": "getAdministrationRemoteAccesses",
        "x-dls-requiredOrganizationSitePermission": "administration_organization_sites_remote_access_read",
        "tags": [
          "administration"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all organization sites that have access to the site",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteAccessOrganizationSites"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/administration/organization-sites/{organizationSiteKey}/remote-accesses/{targetOrganizationSiteKey}": {
      "delete": {
        "summary": "remove the remote access of an organization site",
        "description": "Remove the remote access of an organization site.\n",
        "operationId": "deleteAdministrationRemoteAccessToSite",
        "x-dls-requiredOrganizationSitePermission": "administration_organization_sites_remote_access_delete",
        "tags": [
          "administration"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/targetOrganizationSiteKeyParam"
          }
        ],
        "responses": {
          "204": {
            "description": "Remote site access is unauthorized."
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/administration/organizations/{organizationKey}/users": {
      "get": {
        "summary": "Get organization users information",
        "description": "Return all users of an organization. The organization must\nbelong to the calling user.\nUsers Permissions are returned.\n",
        "operationId": "getAdministrationOrganizationUsers",
        "x-dls-requiredOrganizationPermission": "administration_users_read",
        "tags": [
          "administration"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "All users of the requested organization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdministrationUsersInformation"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "post": {
        "summary": "Create new user",
        "description": "Create a new user and add this user to the organization and the given organization sites\nand equip the new user with permissions according to the given roles.\nThe requesting user must have access to the organization the new user is added.\n",
        "operationId": "postAdministrationOrganizationUser",
        "x-dls-requiredOrganizationPermission": "administration_users_create",
        "tags": [
          "administration"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserForOrganizationAdminRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The user was create and added to the organization"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/administration/organizations/{organizationKey}/users/{userKey}": {
      "get": {
        "summary": "Get information details for one organization user",
        "description": "Return one user of an organization. The organization must\nbelong to the calling user.\nUsers, Org and Sites Permissions are returned.\n",
        "operationId": "getAdministrationOrganizationUser",
        "x-dls-requiredOrganizationPermission": "administration_users_read",
        "tags": [
          "administration"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationKeyParam"
          },
          {
            "$ref": "#/components/parameters/userKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "All users of the requested organization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdministrationUserDetails"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "put": {
        "summary": "Edit user with new site roles/permissions",
        "description": "Edit a existing user and add this user to the given organization sites\nand equip the new user with permissions according to the given roles.\nThe requesting user must have access to the organization the user is added.\nAll previously set permissions and linked sites are removed.\nAll sites and roles to be set must be passed.\nThe optional submitted password is ignored.\n",
        "operationId": "putAdministrationOrganizationUser",
        "x-dls-requiredOrganizationPermission": "administration_users_modify",
        "tags": [
          "administration"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationKeyParam"
          },
          {
            "$ref": "#/components/parameters/userKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserForOrganizationAdminRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The user was edited and got new permissions"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/administration/organization-sites/{organizationSiteKey}/users": {
      "get": {
        "summary": "Get all users with roles of a orgnaization site",
        "description": "Get all assigned users from organization site with\nall roles for the organization site.\n",
        "operationId": "getAdministrationOrganizationSiteUsers",
        "x-dls-requiredOrganizationSitePermission": "administration_organization_sites_users_read",
        "tags": [
          "administration"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Assigned users to organization site",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdministrationUsersInformation"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "post": {
        "deprecated": true,
        "summary": "Create new user for organization site",
        "description": "Deprecated: Please use POST /administration/organization-sites/users\nCreate a new user and add this user to the organization for the specified organization site\nand equip the new user with the rights according to the specified roles.\nThe requesting user must have access to the organization site to which the new user is to be added.\nThe new user can have only the roles carrier, consignee, consignor, site_admin.\n",
        "operationId": "postAdministrationOrganizationSiteUser",
        "x-dls-requiredOrganizationSitePermission": "administration_organization_sites_users_create",
        "tags": [
          "administration"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserForOrganizationSiteAdminRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The user was create and added to the organization"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/administration/organization-sites/users": {
      "post": {
        "summary": "Create new user for organization sites",
        "description": "Create a new user and add this user to the organization for the specified organization sites\nand equip the new user with the rights according to the specified roles.\nThe requesting user must have access to the organization sites to which the new user is to be added.\nThe new user can have only the roles carrier, consignee, consignor, site_admin.\n",
        "operationId": "postAdministrationOrganizationSitesUser",
        "tags": [
          "administration"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserForOrganizationSitesAdminRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The user was create and added to the organization"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/administration/organization-sites/users/{userKey}": {
      "put": {
        "summary": "Edit user with new site roles/permissions",
        "description": "Edit a existing user and add this user to the given organization sites\nand equip the new user with permissions according to the given roles.\nThe requesting user must have access to the organization sites the user is added.\nAll previously set permissions and linked sites are removed.\nAll sites and roles to be set must be passed.\nThe optional submitted password is ignored.\nThe user can have only the roles carrier, consignee, consignor, site_admin.\n",
        "operationId": "putAdministrationOrganizationSitesUser",
        "tags": [
          "administration"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/userKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserForOrganizationSitesAdminRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The user was edited and got new permissions"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/administration/organization-sites/{organizationSiteKey}/users/{userKey}": {
      "patch": {
        "deprecated": true,
        "summary": "Modify user for organization site",
        "description": "Deprecated: Please use PUT /administration/organization-sites/users/{userKey}\nModify a user and for the given organization site and equip the\nuser with permissions according to the given roles.\nThe requesting user must have access to the organization site where the user is in.\nThe edited user can only have the roles site_admin, carrier, consignor, consignee.\nYou can't edit users with roles organization_admin\n",
        "operationId": "patchAdministrationOrganizationSiteUser",
        "x-dls-requiredOrganizationSitePermission": "administration_organization_sites_users_modify",
        "tags": [
          "administration"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/userKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchUserForOrganizationSiteAdminRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The user was create and added to the organization"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "get": {
        "summary": "Get information details for one organization site user",
        "description": "Return one user of an organization site. The organization site must\nbelong to the calling user.\nPermissions are returned.\n",
        "operationId": "getAdministrationOrganizationSiteUser",
        "x-dls-requiredOrganizationSitePermission": "administration_organization_sites_users_read",
        "tags": [
          "administration"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/userKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the user details of the requested user for the specified organization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdministrationUserDetails"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignor/delivery-note-bundles/{deliveryNoteBundleKey}/delivery-notes/{deliveryNoteKey}/attachments/file/{fileName}": {
      "post": {
        "description": "Add a new attachment to a existing delivery note.\nThe delivery note bundle must be in status 'open'.\nAccepted Formats are jpg, png, heic and heif.\n",
        "summary": "Add attachment to open delivery note",
        "operationId": "postAttachmentToDeliveryNote",
        "x-dls-requiredOrganizationSitePermission": "attachment_create",
        "tags": [
          "attachments"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteBundleKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          },
          {
            "$ref": "#/components/parameters/fileNameParam"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/AttachmentImageFile"
        },
        "responses": {
          "200": {
            "description": "Attachment with generated _key and mimeType infos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignor/delivery-note-bundles/{deliveryNoteBundleKey}/delivery-notes/{deliveryNoteKey}/attachments/{attachmentKey}": {
      "get": {
        "description": "Get a single attachment of a delivery note.\n",
        "summary": "Get one attachment of delivery note",
        "operationId": "getAttachment",
        "x-dls-requiredOrganizationSitePermission": "attachment_read",
        "tags": [
          "attachments"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteBundleKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          },
          {
            "$ref": "#/components/parameters/attachmentKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Attachment",
            "$ref": "#/components/requestBodies/AttachmentFile"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "delete": {
        "description": "Delete a attachment from a delivery note.\nThe delivery note bundle must be in status 'open'.\n",
        "summary": "Delete attachment from delivery note",
        "operationId": "deleteAttachment",
        "x-dls-requiredOrganizationSitePermission": "attachment_delete",
        "tags": [
          "attachments"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteBundleKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          },
          {
            "$ref": "#/components/parameters/attachmentKeyParam"
          }
        ],
        "responses": {
          "204": {
            "description": "Attachment was deleted"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignor/delivery-note-bundles/{deliveryNoteBundleKey}/delivery-notes/{deliveryNoteKey}/attachments": {
      "get": {
        "description": "Get a list of attachments of single delivery note.\n",
        "summary": "All attachments of a delivery note",
        "operationId": "getAttachmentsForDeliveryNote",
        "x-dls-requiredOrganizationSitePermission": "attachment_read",
        "tags": [
          "attachments"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteBundleKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Attachment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAttachmentsResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/delivery-notes/{deliveryNoteKey}/discrepancy-images/file/{fileName}": {
      "post": {
        "summary": "Add an image for a discrepancy",
        "description": "Add a new image attachment to a existing delivery note for the consignee\nThe delivery note must be in a started checkin.\nAccepted Formats are jpg, png, heic, heif\n",
        "operationId": "postConsigneeDiscrepancyImageToDeliveryNote",
        "x-dls-requiredOrganizationSitePermission": "consignee_discrepancy_images_create",
        "tags": [
          "discrepancy images"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          },
          {
            "$ref": "#/components/parameters/fileNameParam"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/AttachmentImageFile"
        },
        "responses": {
          "200": {
            "description": "Attachment with generated _key and mimeType infos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsigneeAttachmentResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/delivery-notes/{deliveryNoteKey}/discrepancy-images/{attachmentKey}": {
      "get": {
        "summary": "Get an image for a discrepancy",
        "description": "Retrieving a single discrepancy image for a specific delivery note as a consignee\n",
        "operationId": "getConsigneeDiscrepancyImageAttachment",
        "x-dls-requiredOrganizationSitePermission": "consignee_discrepancy_images_read",
        "tags": [
          "discrepancy images"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          },
          {
            "$ref": "#/components/parameters/attachmentKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Attachment",
            "$ref": "#/components/requestBodies/AttachmentFile"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "delete": {
        "summary": "Delete an image for a discrepancy",
        "description": "Delete a discrepancy image attachment for the consignee from a delivery note.\nThe delivery note must be in a started checkin.\n",
        "operationId": "deleteConsigneeDiscrepancyImage",
        "x-dls-requiredOrganizationSitePermission": "consignee_discrepancy_images_delete",
        "tags": [
          "discrepancy images"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          },
          {
            "$ref": "#/components/parameters/attachmentKeyParam"
          }
        ],
        "responses": {
          "204": {
            "description": "Attachment was deleted"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/delivery-notes/{deliveryNoteKey}/discrepancy-images": {
      "get": {
        "summary": "Get all image for a discrepancy for a Delvivery Note",
        "description": "get a list of attachments for a single delivery note for the consignee\n",
        "operationId": "getConsigneeDiscrepancyImagesMetadata",
        "x-dls-requiredOrganizationSitePermission": "consignee_discrepancy_images_read",
        "tags": [
          "discrepancy images"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Attachment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConsigneeAttachmentsResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/delivery-notes/{deliveryNoteKey}/load-carrier-files/file/{fileName}": {
      "post": {
        "summary": "Add an file for a load carrier exchange",
        "description": "Add a new file attachment for load carrier exchange to a existing delivery note for the consignee\nThe delivery note must be in a started checkin.\nAccepted Formats are png, jpg, png, heic, heif\n",
        "operationId": "postConsigneeLoadCarrierFileToDeliveryNote",
        "x-dls-requiredOrganizationSitePermission": "consignee_load_carrier_file_create",
        "tags": [
          "consignee load carrier files"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          },
          {
            "$ref": "#/components/parameters/fileNameParam"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/AttachmentImageFile"
        },
        "responses": {
          "200": {
            "description": "Attachment with generated _key and mimeType infos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsigneeAttachmentResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/delivery-notes/{deliveryNoteKey}/load-carrier-files/{attachmentKey}": {
      "get": {
        "summary": "Get an load carrier file forr a delivery note",
        "description": "Retrieving a single load carrier file for a specific delivery note as a consignee\n",
        "operationId": "getConsigneeLoadCarrierFile",
        "x-dls-requiredOrganizationSitePermission": "consignee_load_carrier_file_read",
        "tags": [
          "consignee load carrier files"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          },
          {
            "$ref": "#/components/parameters/attachmentKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Attachment",
            "$ref": "#/components/requestBodies/AttachmentFile"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "delete": {
        "summary": "Delete an file for a load carrier",
        "description": "Delete a load carrier attachment for the consignee from a delivery note.\nThe delivery note must be in a started checkin.\n",
        "operationId": "deleteConsigneeLoadCarrierFile",
        "x-dls-requiredOrganizationSitePermission": "consignee_load_carrier_file_delete",
        "tags": [
          "consignee load carrier files"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          },
          {
            "$ref": "#/components/parameters/attachmentKeyParam"
          }
        ],
        "responses": {
          "204": {
            "description": "Attachment was deleted"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/delivery-notes/{deliveryNoteKey}/load-carrier-files": {
      "get": {
        "summary": "Get all load carrier files for a Delvivery Note",
        "description": "Get a list of metadata for load carrier files that are attached to a specific delivery note as a consignee\n",
        "operationId": "getConsigneeLoadCarrierFilesMetadata",
        "x-dls-requiredOrganizationSitePermission": "consignee_load_carrier_file_read",
        "tags": [
          "consignee load carrier files"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Attachment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConsigneeAttachmentsResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/delivery-notes/{deliveryNoteKey}/receipts/file/{fileName}": {
      "post": {
        "summary": "Post a receipt file",
        "description": "Add a new consignee receipt, with or without the flag 'discrepancies', to a existing delivery note.\nThe delivery note must be in a started checkin.\nOnly PDF files are accepted.\n",
        "operationId": "postConsigneeReceiptToDeliveryNote",
        "x-dls-requiredOrganizationSitePermission": "consignee_receipts_create",
        "tags": [
          "receipts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          },
          {
            "$ref": "#/components/parameters/fileNameParam"
          },
          {
            "$ref": "#/components/parameters/HasDiscrepancyTypeParam"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PDFFileRequest"
        },
        "responses": {
          "200": {
            "description": "Attachment with generated _key and mimeType infos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsigneeAttachmentResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/delivery-notes/{deliveryNoteKey}/receipts/{attachmentKey}": {
      "get": {
        "summary": "Get a receipts file",
        "description": "get a single receipt for a delivery note for consignee\n",
        "operationId": "getConsigneeDiscrepancyReceiptAttachment",
        "x-dls-requiredOrganizationSitePermission": "consignee_receipts_read",
        "tags": [
          "receipts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          },
          {
            "$ref": "#/components/parameters/attachmentKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Attachment",
            "$ref": "#/components/requestBodies/AttachmentFile"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "delete": {
        "summary": "Delete a receipt files for a delivery note",
        "description": "Delete a receipt attachment for the consignee from a delivery note.\nThe delivery note bundle must be in status 'sent'\n",
        "operationId": "deleteConsigneeReceipt",
        "x-dls-requiredOrganizationSitePermission": "consignee_receipts_delete",
        "tags": [
          "receipts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          },
          {
            "$ref": "#/components/parameters/attachmentKeyParam"
          }
        ],
        "responses": {
          "204": {
            "description": "Attachment was deleted"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/delivery-notes/{deliveryNoteKey}/receipts": {
      "get": {
        "summary": "Get all receipt files for a delivery note",
        "description": "get a list of receipt attachments for a single delivery note for the consignee\n",
        "operationId": "getConsigneeReceiptsForDeliveryNote",
        "x-dls-requiredOrganizationSitePermission": "consignee_receipts_read",
        "tags": [
          "receipts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Attachment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConsigneeAttachmentsResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/delivery-notes/{deliveryNoteKey}/fine-discrepancies/file/{fileName}": {
      "post": {
        "summary": "create new fine discrepancy for a delivery note",
        "description": "Create a new fine discrepancy for a delivery note.\nThe delivery note must be in a started checkin.\nThe only accepted format is pdf.\n",
        "operationId": "postNewFineDiscrepancy",
        "x-dls-requiredOrganizationSitePermission": "consignee_fine_discrepancies_create",
        "tags": [
          "fine discrepancies"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          },
          {
            "$ref": "#/components/parameters/fileNameParam"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PDFFileRequest"
        },
        "responses": {
          "200": {
            "description": "Attachment with generated _key and mimeType infos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsigneeAttachmentResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/delivery-notes/{deliveryNoteKey}/fine-discrepancies/{discrepancyKey}": {
      "get": {
        "summary": "get a fine discrepancy for a delivery note",
        "description": "Get a single fine discrepancy for a delivery note as a consignee.\n",
        "operationId": "getFineDiscrepancy",
        "x-dls-requiredOrganizationSitePermission": "consignee_fine_discrepancies_read",
        "tags": [
          "fine discrepancies"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          },
          {
            "$ref": "#/components/parameters/discrepancyKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Attachment",
            "$ref": "#/components/requestBodies/AttachmentFile"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/delivery-notes/{deliveryNoteKey}/fine-discrepancies": {
      "get": {
        "summary": "get all fine discrepancies for a delivery note",
        "description": "Get all meta data for a fine discrepancies for a single delivery note as a consignee.\n",
        "operationId": "getFineDiscrepanciesForDelviveryNote",
        "x-dls-requiredOrganizationSitePermission": "consignee_fine_discrepancies_read",
        "tags": [
          "fine discrepancies"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "result from operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConsigneeAttachmentsResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/delivery-notes/{deliveryNoteKey}/pallet-tickets/file/{fileName}": {
      "post": {
        "summary": "Add a new PalletTicket to a existing delivery note.",
        "description": "Add a new PalletTicket to a existing delivery note.\nThe delivery note must be in a started checkin.\nAccepted Formats are only pdfs.\n",
        "operationId": "postPalletTicketToDeliveryNote",
        "x-dls-requiredOrganizationSitePermission": "consignee_pallet_tickets_create",
        "tags": [
          "pallet tickets"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          },
          {
            "$ref": "#/components/parameters/fileNameParam"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PDFFileRequest"
        },
        "responses": {
          "200": {
            "description": "PalletTicket with generated _key and mimeType infos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsigneeAttachmentResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/delivery-notes/{deliveryNoteKey}/pallet-tickets/{attachmentKey}": {
      "get": {
        "summary": "Get a single PalletTicket for a delivery note.",
        "description": "Get a single PalletTicket for a delivery note by organizationSiteKey,\ndeliveryNoteKey and palletTicketKey.\n",
        "operationId": "getPalletTicket",
        "x-dls-requiredOrganizationSitePermission": "consignee_pallet_tickets_read",
        "tags": [
          "pallet tickets"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          },
          {
            "$ref": "#/components/parameters/attachmentKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "PalletTicket",
            "$ref": "#/components/requestBodies/PDFFileRequest"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "delete": {
        "summary": "Delete a PalletTicket from a delivery note.",
        "description": "Delete a PalletTicket from a delivery note.\nThe delivery note bundle must be in status 'sent'.\n",
        "operationId": "deletePalletTicket",
        "x-dls-requiredOrganizationSitePermission": "consignee_pallet_tickets_delete",
        "tags": [
          "pallet tickets"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          },
          {
            "$ref": "#/components/parameters/attachmentKeyParam"
          }
        ],
        "responses": {
          "204": {
            "description": "PalletTicket was deleted"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/delivery-notes/{deliveryNoteKey}/pallet-tickets": {
      "get": {
        "summary": "Get a list of pallet tickets for a single delivery note.",
        "description": "Get a list of pallet tickets for a single delivery note by organizationSiteKey\nand deliveryNoteKey.\n",
        "operationId": "getPalletTicketsForDeliveryNote",
        "x-dls-requiredOrganizationSitePermission": "consignee_pallet_tickets_read",
        "tags": [
          "pallet tickets"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "PalletTicket",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConsigneeAttachmentsResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/authentication/login": {
      "post": {
        "summary": "Log in",
        "description": "Log in user and get initial user, organization and organization site\ndata with permissions.\n",
        "operationId": "postLogin",
        "security": [],
        "tags": [
          "authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "login response data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/authentication/loginTwoFARequest": {
      "post": {
        "summary": "request 2fa for log in",
        "description": "Request login of user by email and send an email with 2fa code to login the user.\n",
        "operationId": "postLogin2FARequest",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostLoginTwoFARequest"
              }
            }
          }
        },
        "tags": [
          "authentication"
        ],
        "responses": {
          "204": {
            "description": "Email was sent successful to user with 2fa code to login"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/authentication/logout": {
      "post": {
        "summary": "Log out",
        "description": "Log out the user.\n",
        "operationId": "postLogout",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": [
          "authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmptyArray"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "successful logout"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/checkins": {
      "post": {
        "summary": "Start a new checkin with delivery notes.",
        "description": "Start a new checkin with delivery notes.\nAll delivery notes must not be in a finished checkin.\nIf a delivery note is in another checkin with status 'started'\nthe delivery note is moved to the new checkin.\nThe driver information is copied to the new checkin.\nThe driver information from the most recent started checkin is used.\nAfter the checkin was started it is possible\nto add discrepancies, load carriers and associated files.\nThe checkin has the status 'started' -> 'signing' -> 'finished'.\n",
        "operationId": "postConsigneeCheckinDeliveryNotes",
        "x-dls-requiredOrganizationSitePermission": "consignee_checkins_create",
        "tags": [
          "checkins"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostConsigneeCheckinDeliveryNotesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created checkin object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsigneeCheckinResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/checkins/{checkinKey}": {
      "patch": {
        "summary": "Finish a checkin with signatures.",
        "description": "Finish a checkin by sending the signatures of the consignee and\ncarrier. The signatures must be pngs in base64 format.\n",
        "operationId": "patchConsigneeCheckin",
        "x-dls-requiredOrganizationSitePermission": "consignee_checkins_finish",
        "tags": [
          "checkins"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/checkinKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchConsigneeCheckinRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The checkin was finished"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "get": {
        "summary": "Get a checkin document.",
        "description": "Get a checkin document with delivery notes.\n",
        "operationId": "getConsigneeCheckin",
        "x-dls-requiredOrganizationSitePermission": "consignee_checkins_read",
        "tags": [
          "checkins"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/checkinKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "The checkin document",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsigneeCheckinResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/checkins/{checkinKey}/driver-details": {
      "put": {
        "summary": "Update driver information",
        "description": "Update driver information of the relevant consignee delivery note bundle.\nReturns 400 http status if any wrong input params are sent. Returns 200 when\nthe updated is successfully.\nThe checkin must be in status 'started'.\n",
        "operationId": "putConsignerDriverDetails",
        "x-dls-requiredOrganizationSitePermission": "consignee_checkin_driver_details_update",
        "tags": [
          "checkins"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/checkinKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutDriverInformation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Driver information updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckinsForDriverUpdate"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignor/delivery-note-bundles": {
      "post": {
        "summary": "Create bundle",
        "description": "Create new delivery note bundle.\nThe consignor key in the payload and the path parameter\norganizationSiteKey must be equal.\nThe carrierKey and consigneeKey are the organizationSiteKeys\nof the parties in the supply chain.\nSo the consignor site is the site where the bundle will be created in.\n",
        "operationId": "postNewBundle",
        "x-dls-requiredOrganizationSitePermission": "delivery_note_bundles_create",
        "tags": [
          "delivery note bundles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostBundleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "result from operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostBundleResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "get": {
        "summary": "Get bundle list as consignor",
        "description": "Get overview list of all delivery note bundles.\n",
        "operationId": "getBundles",
        "x-dls-requiredOrganizationSitePermission": "delivery_note_bundles_read",
        "tags": [
          "delivery note bundles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "overview list of delivery note bundles",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryNoteBundlesOverview"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignor/delivery-note-bundles/{deliveryNoteBundleKey}": {
      "get": {
        "summary": "Get a bundle by key",
        "description": "Get one delivery note bundle by delivery note bundle key.\n",
        "operationId": "getBundle",
        "x-dls-requiredOrganizationSitePermission": "delivery_note_bundles_read",
        "tags": [
          "delivery note bundles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteBundleKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "data of one delivery note bundle with delivery note metadata",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryNoteBundle"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "patch": {
        "summary": "Update data of open bundle",
        "description": "Update name and supply chain of a delivery note bundle.\nThe bundle must be in status 'open'.\n",
        "operationId": "patchBundle",
        "x-dls-requiredOrganizationSitePermission": "delivery_note_bundles_update",
        "tags": [
          "delivery note bundles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteBundleKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchBundleRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "delivery note bundle updated successfully"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "delete": {
        "summary": "Delete bundle",
        "description": "Delete one delivery note bundle by delivery note bundle key if bundle status is 'open'.\nThe delivery notes (with attachments and load carriers) remain in the pool.\n",
        "operationId": "deleteBundle",
        "x-dls-requiredOrganizationSitePermission": "delivery_note_bundles_delete",
        "tags": [
          "delivery note bundles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteBundleKeyParam"
          }
        ],
        "responses": {
          "204": {
            "description": "delivery note bundle was deleted"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignor/delivery-note-bundles-merge": {
      "post": {
        "summary": "Merge open bundles",
        "description": "Merge multiple delivery note bundles into a new one. All bundles\nmust have status 'open'. The supply chain and name are taken from\nthe first bundle in the array\n",
        "operationId": "postMergeBundles",
        "x-dls-requiredOrganizationSitePermission": "delivery_note_bundles_merge",
        "tags": [
          "delivery note bundles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/MergeDeliveryNoteBundle"
        },
        "responses": {
          "200": {
            "description": "result from operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/carrier/delivery-note-bundles": {
      "get": {
        "description": "Get overview list of all delivery note bundles for the carrier.\n",
        "summary": "Get bundle list as carrier",
        "operationId": "getCarrierBundles",
        "x-dls-requiredOrganizationSitePermission": "delivery_note_bundles_read",
        "tags": [
          "delivery note bundles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "overview list of delivery note bundles",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarrierDeliveryNoteBundlesOverview"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/carrier/delivery-note-bundles/{deliveryNoteBundleKey}": {
      "get": {
        "description": "Get one delivery note bundle for a checkin.\n",
        "summary": "Get bundle for checkin",
        "operationId": "getCarrierBundle",
        "x-dls-requiredOrganizationSitePermission": "delivery_note_bundles_read",
        "tags": [
          "delivery note bundles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteBundleKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Data for one delivery note bundle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarrierDeliveryNoteBundle"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignor/delivery-note-bundles-checkout": {
      "post": {
        "summary": "Checkout one or more delivery note bundles.",
        "description": "Checkout one or more delivery note bundles. All bundles must be in status 'open'.\nThe checkout is only possible when every bundle to checkout has at least one delivery note.\n",
        "operationId": "postDeliveryNoteBundlesCheckout",
        "x-dls-requiredOrganizationSitePermission": "delivery_note_bundles_checkout_multiple",
        "tags": [
          "delivery note bundles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryNoteBundlesCheckout"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Data to view the wallet invite page URL as a QR code",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleCheckoutResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/delivery-note-bundles": {
      "get": {
        "summary": "Get bundle list as consignee",
        "description": "Get overview list of all delivery note bundles for the consignee.\n",
        "operationId": "getConsigneeBundles",
        "x-dls-requiredOrganizationSitePermission": "delivery_note_bundles_read",
        "tags": [
          "delivery note bundles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "overview list of delivery note bundles",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryNoteBundlesOverview"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/delivery-note-bundles/{deliveryNoteBundleKey}": {
      "get": {
        "summary": "Get bundle for check in",
        "description": "Get one delivery note bundle for a checkin.\n",
        "operationId": "getConsigneeBundle",
        "x-dls-requiredOrganizationSitePermission": "delivery_note_bundles_read",
        "tags": [
          "delivery note bundles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteBundleKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Data for one delivery note bundle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsigneeDeliveryNoteBundle"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/delivery-note-bundles/checkin": {
      "get": {
        "summary": "Get bundles via token for checkin",
        "description": "Get delivery note bundles for a checkin via access token\nfrom a wallet.\n",
        "operationId": "getConsigneeBundlesForCheckin",
        "x-dls-requiredOrganizationSitePermission": "delivery_note_bundles_read",
        "tags": [
          "delivery note bundles",
          "checkins"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/TokenTypeParam"
          }
        ],
        "responses": {
          "200": {
            "description": "List of delivery note bundles which belong to a checkin\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConsigneeDeliveryNoteBundlesCheckinResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/carrier/delivery-notes": {
      "get": {
        "summary": "Get delivery notes w/o load carriers as carrier",
        "description": "Get carrier delivery notes from delivery note pool.\nProperty loadCarriers is always an empty array. To get the\nload carriers please use the load carriers endpoint.\n",
        "operationId": "getCarrierDeliveryNotesMetadataInPool",
        "x-dls-requiredOrganizationSitePermission": "delivery_notes_read",
        "tags": [
          "delivery notes"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "body contains list of delivery notes metadata",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarrierDeliveryNotesInPool"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/carrier/delivery-note-bundles/{deliveryNoteBundleKey}/delivery-note-pdfs": {
      "get": {
        "summary": "Get bundle PDF as carrier",
        "description": "Get all delivery note PDF's as merged PDF from carrier delivery\nnote bundle. If the delivery note bundle does not have any delivery\nnotes an HTTP status code 400 is returned.\n",
        "operationId": "getCarrierDeliveryNotePdfsForBundle",
        "x-dls-requiredOrganizationSitePermission": "delivery_notes_read",
        "tags": [
          "delivery notes",
          "pdf"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteBundleKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "body contains array of pdfs in binary format",
            "content": {
              "application/pdf": {
                "schema": {
                  "$ref": "#/components/schemas/BinaryFileType"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/carrier/delivery-note-bundles/{deliveryNoteBundleKey}/delivery-notes/{deliveryNoteKey}/pdf": {
      "get": {
        "description": "Get the PDF of a carrier delivery note.\n",
        "summary": "Get PDF as carrier",
        "operationId": "getCarrierDeliveryNotePdf",
        "x-dls-requiredOrganizationSitePermission": "delivery_notes_read",
        "tags": [
          "delivery notes",
          "pdf"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteBundleKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PDFFileResponse"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/carrier/delivery-notes/share-rights": {
      "post": {
        "summary": "Share rights of delivery note",
        "description": "Share rights of a delivery note to another carrier organization site.\n",
        "operationId": "shareDeliveryNotesRights",
        "x-dls-requiredOrganizationSitePermission": "carrier_delivery_notes_share_rights",
        "tags": [
          "delivery notes"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CarrierShareDeliveryNoteAccessRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Rights shared successfully"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/carrier/delivery-notes/lookup": {
      "post": {
        "summary": "Get the delivery note key by number, optional order number and gln of consignor",
        "description": "Get the delivery note key by number, optional order number and the gln of the consignor, if it exists and the organization site has access.\n",
        "operationId": "lookupDeliveryNoteKeys",
        "x-dls-requiredOrganizationSitePermission": "carrier_delivery_note_keys_lookup",
        "tags": [
          "delivery notes"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CarrierLookupDeliveryNoteKeysRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Delivery note keys",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarrierLookupDeliveryNoteResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/delivery-notes": {
      "get": {
        "summary": "Get delivery notes w/o load carriers as consignee",
        "description": "Get consignee delivery notes from delivery note pool.\nProperty loadCarriers is always an empty array. To get the\nload carriers please use the load carriers endpoint.\n",
        "operationId": "getConsigneeDeliveryNotesMetadataInPool",
        "x-dls-requiredOrganizationSitePermission": "delivery_notes_read",
        "tags": [
          "delivery notes"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "body contains list of delivery notes metadata",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsigneeDeliveryNotesInPool"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/delivery-notes/{deliveryNoteKey}/pdf": {
      "get": {
        "summary": "Get PDF as consignee",
        "description": "Get a delivery note PDF from the consignee delivery note pool.\n",
        "operationId": "getConsigneeDeliveryNoteFromPool",
        "x-dls-requiredOrganizationSitePermission": "delivery_notes_read",
        "tags": [
          "delivery notes",
          "pdf"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PDFFileResponse"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/delivery-note-bundles/{deliveryNoteBundleKey}/delivery-note-pdfs": {
      "get": {
        "summary": "Get bundle PDF as consignee",
        "description": "Get all delivery note PDF's as merged PDF from consignee delivery\nnote bundle. If the delivery note bundle does not have any delivery\nnotes an HTTP status code 400 is returned.\n",
        "operationId": "getConsigneeDeliveryNotePdfsForBundle",
        "x-dls-requiredOrganizationSitePermission": "delivery_notes_read",
        "tags": [
          "delivery notes",
          "pdf"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteBundleKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "body contains array of pdfs in binary format",
            "content": {
              "application/pdf": {
                "schema": {
                  "$ref": "#/components/schemas/BinaryFileType"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/consignee/delivery-notes/checkin": {
      "get": {
        "deprecated": true,
        "summary": "get delivery note keys from wallet for checkin",
        "description": "Deprecated - will be removed 2023-02-28\nGet delivery notes for a checkin.\nThe token from the checkout wallet or from the tour wallet.\nReturns list of delivery note keys that can be used to create a checkin.\nThe requesting user must have the permission\nconsignee_delivery_notes_lookup_with_token on all organization sites.\nThis endpoint is deprecated. Please use the endpoint\nGET /organization-sites/consignee/delivery-notes/for-checkin\ninstead.\n",
        "operationId": "getConsigneeDeliveryNoteKeysForToken",
        "tags": [
          "checkins"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/TokenTypeParam"
          }
        ],
        "responses": {
          "200": {
            "description": "List of delivery note keys that can be used to create a checkin.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeyArrayType"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/consignee/delivery-notes/for-checkin": {
      "get": {
        "summary": "get delivery note keys from wallet for checkin",
        "description": "Get delivery notes for a checkin.\nThe token from the checkout wallet or from the tour wallet.\nReturns list of delivery note keys and their organization site key\nthat can be used to create a checkin.\nThe requesting user must have the permission\nconsignee_delivery_notes_lookup_with_token on all organization sites.\n",
        "operationId": "getConsigneeDeliveryNotesForToken",
        "tags": [
          "checkins"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/TokenTypeParam"
          }
        ],
        "responses": {
          "200": {
            "description": "List of delivery note keys that can be used to create a checkin.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConsigneeDeliveryNotesForToken"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignor/delivery-note-bundles/{deliveryNoteBundleKey}/delivery-notes/pdf": {
      "post": {
        "summary": "Add PDF to bundle",
        "description": "Adds the posted delivery note PDF to the delivery note bundle.\nThe PDF is converted to PDF/A3.\n",
        "operationId": "postDeliveryNoteIntoBundle",
        "x-dls-requiredOrganizationSitePermission": "delivery_notes_create",
        "tags": [
          "delivery notes"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteBundleKeyParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostDeliveryNoteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "result from operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDeliveryNoteResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignor/delivery-notes": {
      "post": {
        "summary": "Upload delivery note PDF",
        "description": "Adds the uploaded delivery note PDF to the delivery note pool.\nThe PDF is converted to PDF/A3. The pool is a collection of\nloose delivery notes without a assigned supply chain or bundle.\n",
        "operationId": "postDeliveryNoteToPool",
        "x-dls-requiredOrganizationSitePermission": "delivery_notes_create",
        "tags": [
          "delivery notes"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostDeliveryNoteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "result from operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDeliveryNoteResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "get": {
        "summary": "Get delivery notes data w/o load carriers",
        "description": "Get delivery notes metadata from delivery note pool.\nProperty loadCarriers is always an empty array. To get the\nload carriers please use the load carriers endpoint.\n",
        "operationId": "getDeliveryNotesMetadataInPool",
        "x-dls-requiredOrganizationSitePermission": "delivery_notes_read",
        "tags": [
          "delivery notes"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "body contains list of delivery notes metadata",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryNoteInPoolArray"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignor/delivery-note-bundles/{deliveryNoteBundleKey}/delivery-note-pdfs": {
      "get": {
        "summary": "Get bundle PDF from bundle",
        "description": "Get all delivery note PDF's as merged PDF from delivery note bundle.\nIf the delivery note bundle does not have any delivery note an HTTP\nstatus code 400 is returned.\n",
        "operationId": "getDeliveryNotePdfsForBundle",
        "x-dls-requiredOrganizationSitePermission": "delivery_notes_read",
        "tags": [
          "delivery notes",
          "pdf"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteBundleKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "body contains array of pdfs in binary format",
            "content": {
              "application/pdf": {
                "schema": {
                  "$ref": "#/components/schemas/BinaryFileType"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignor/delivery-note-bundles/{deliveryNoteBundleKey}/delivery-notes": {
      "post": {
        "summary": "Add delivery note to open bundle",
        "description": "Add existing delivery notes into an existing delivery note bundle.\nThe delivery note must not in any bundle when adding.\nThe delivery note bundle must be in status 'open'.\n",
        "operationId": "postExistingDeliveryNoteIntoExistingBundle",
        "x-dls-requiredOrganizationSitePermission": "delivery_notes_add_to_bundle",
        "tags": [
          "delivery notes"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteBundleKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeyArrayType"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "All delivery note keys in the array were added to the\ndelivery note bundles.\n"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "get": {
        "summary": "Get delivery notes data from bundle w/o load carriers",
        "description": "Get delivery notes metadata from a delivery note bundle.\nProperty loadCarriers is always an empty array. To get the\nload carriers please use the load carriers endpoint.\n",
        "operationId": "getDeliveryNoteMetadataInBundle",
        "x-dls-requiredOrganizationSitePermission": "delivery_notes_read",
        "tags": [
          "delivery notes"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteBundleKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "body contains list of delivery notes metadata",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryNoteArray"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignor/delivery-note-bundles/{deliveryNoteBundleKey}/delivery-notes/some": {
      "delete": {
        "summary": "Detach delivery notes from bundle",
        "description": "Detach existing delivery notes from an existing delivery note bundle.\nAll delivery notes must be in the same bundle when removing.\nThe delivery note bundle must be in status 'open'.\nThe delevery notes would become detached from bundle and remain in pool.\n",
        "operationId": "deleteDeliveryNotesFromDeliveryNoteBundle",
        "x-dls-requiredOrganizationSitePermission": "delivery_notes_in_bundles_delete",
        "tags": [
          "delivery notes"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteBundleKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeyArrayType"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "All delivery note keys in the array were removed from the\ndelivery note bundle.\n"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignor/delivery-notes/{deliveryNoteKey}/pdf": {
      "get": {
        "summary": "Get PDF from pool",
        "description": "Get delivery note PDF from delivery note pool.\n",
        "operationId": "getDeliveryNoteFromPool",
        "x-dls-requiredOrganizationSitePermission": "delivery_notes_read",
        "tags": [
          "delivery notes",
          "pdf"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PDFFileResponse"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignor/delivery-notes/{deliveryNoteKey}": {
      "patch": {
        "summary": "Update delivery note data",
        "description": "Patch a delivery note. If the delivery note belongs to a delivery\nnote bundle the data can only be updated if the bundle is in status\n'open'. The number and order number must be set with the first patch\ncall for a delivery note.\n",
        "operationId": "patchDeliveryNoteMetadata",
        "x-dls-requiredOrganizationSitePermission": "delivery_notes_update",
        "tags": [
          "delivery notes"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchDeliveryNoteRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The delivery note was updated."
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "delete": {
        "summary": "Delete delivery note from pool",
        "description": "Delete a delivery note with its PDF. The delivery note must not in\na delivery note bundle. Remaining load carriers or attachments are\nalso deleted.\n",
        "operationId": "deleteDeliveryNote",
        "x-dls-requiredOrganizationSitePermission": "delivery_notes_delete",
        "tags": [
          "delivery notes"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          }
        ],
        "responses": {
          "204": {
            "description": "The delivery note was deleted."
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignor/delivery-note-bundles/{deliveryNoteBundleKey}/delivery-notes/{deliveryNoteKey}": {
      "delete": {
        "summary": "Detach delivery note from open bundle and delete load carrier",
        "description": "Detaches a delivery note from a bundle. Deletes also the load\ncarriers that hang on the delivery note. The bundles must be in\nstatus 'open'.\n",
        "operationId": "deleteDeliveryNoteInBundle",
        "x-dls-requiredOrganizationSitePermission": "delivery_notes_delete",
        "tags": [
          "delivery notes"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteBundleKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          }
        ],
        "responses": {
          "204": {
            "description": "the delivery note was removed from the bundle"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/delivery-notes/{deliveryNoteKey}": {
      "get": {
        "summary": "Get meta data for a delivery note w/o loadcarrier",
        "description": "Get meta data for a single delivery note from delivery note pool.\nProperty loadCarriers is always an empty array. To get the\nload carriers please use the load carriers endpoint.\n",
        "operationId": "getSingleDeliveryNoteMetaData",
        "tags": [
          "delivery notes"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Delivery note metata data as json",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleDeliveryNote"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignor/delivery-notes/{deliveryNoteKey}/complete-pdf": {
      "get": {
        "summary": "Get a complete pdf with checkout and checkin data",
        "description": "Get a complete pdf with checkout and checkin data: all delivery notes,\nall attachments, all signatures and all images as a consignor\n",
        "operationId": "getConsignorDeliveryNoteCombinedPdf",
        "x-dls-requiredOrganizationSitePermission": "consignor_delivery_notes_complete_pdf_read",
        "tags": [
          "delivery notes",
          "consignor",
          "pdf"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PDFFileResponse"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/carrier/delivery-notes/{deliveryNoteKey}/complete-pdf": {
      "get": {
        "summary": "Get a complete pdf with checkout and checkin data",
        "description": "Get a complete pdf with checkout and checkin data: all delivery notes,\nall attachments, all signatures and all images as a carrier\n",
        "operationId": "getCarrierDeliveryNoteCombinedPdf",
        "x-dls-requiredOrganizationSitePermission": "carrier_delivery_notes_complete_pdf_read",
        "tags": [
          "delivery notes",
          "carrier",
          "pdf"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PDFFileResponse"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/delivery-notes/{deliveryNoteKey}/complete-pdf": {
      "get": {
        "summary": "Get a complete pdf with checkout and checkin data",
        "description": "Get a complete pdf with checkout and checkin data: the delivery note,\nall attachments, all signatures and all images\n",
        "operationId": "getConsigneeDeliveryNoteCombinedPdf",
        "x-dls-requiredOrganizationSitePermission": "consignee_delivery_notes_complete_pdf_read",
        "tags": [
          "consignee",
          "checkins",
          "pdf"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PDFFileResponse"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/delivery-notes/{deliveryNoteKey}/discrepancies": {
      "post": {
        "summary": "Add a new discrepancy to a delivery note.",
        "description": "Add a new discrepancy to a delivery note.\nThe delivery note must be in a started checkin\n",
        "operationId": "postNewDiscrepancy",
        "x-dls-requiredOrganizationSitePermission": "consignee_discrepancies_create",
        "tags": [
          "discrepancies"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscrepancyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "result from operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscrepancyResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "put": {
        "summary": "Replace all discrepancies for a delivery note.",
        "description": "Replace all discrepancies for a delivery note.\n",
        "operationId": "putConsigneeDiscrepancies",
        "x-dls-requiredOrganizationSitePermission": "consignee_discrepancies_replace",
        "tags": [
          "discrepancies"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscrepanciesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of new discrepancies.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscrepanciesResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "get": {
        "summary": "Get all discrepancies for a delivery note.",
        "description": "Get all discrepancies for a delivery note.\n",
        "operationId": "getDiscrepanciesForDelviveryNote",
        "x-dls-requiredOrganizationSitePermission": "consignee_discrepancies_read",
        "tags": [
          "discrepancies"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "result from operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDiscrepanciesResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/delivery-notes/{deliveryNoteKey}/discrepancies/{discrepancyKey}": {
      "patch": {
        "summary": "Update a discrepancy for a delivery note.",
        "description": "Update a discrepancy for a delivery note.\nThe delivery note must be in a started checkin.\n",
        "operationId": "patchDiscrepancy",
        "x-dls-requiredOrganizationSitePermission": "consignee_discrepancies_update",
        "tags": [
          "discrepancies"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          },
          {
            "$ref": "#/components/parameters/discrepancyKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscrepancyRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "result from operation"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "delete": {
        "summary": "Delete a discrepancy from a delivery note.",
        "description": "Delete a discrepancy from a delivery note.\n",
        "operationId": "deleteDiscrepancy",
        "x-dls-requiredOrganizationSitePermission": "consignee_discrepancies_delete",
        "tags": [
          "discrepancies"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          },
          {
            "$ref": "#/components/parameters/discrepancyKeyParam"
          }
        ],
        "responses": {
          "204": {
            "description": "Discrepancy was deleted"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "get": {
        "summary": "Get a discrepancy for a delivery note.",
        "description": "Get a discrepancy for a delivery note.\n",
        "operationId": "getDiscrepancy",
        "x-dls-requiredOrganizationSitePermission": "consignee_discrepancies_read",
        "tags": [
          "discrepancies"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          },
          {
            "$ref": "#/components/parameters/discrepancyKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "result from operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscrepancyResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/discrepancies/choices": {
      "get": {
        "summary": "Get all possible discrepancies reasons and units.",
        "description": "Get all possible discrepancies reasons and units.\n",
        "operationId": "getDiscrepanciesChoices",
        "tags": [
          "discrepancies"
        ],
        "responses": {
          "200": {
            "description": "discrepancies choices",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscrepanciesChoices"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/external/signature-pads/{signaturePadType}": {
      "patch": {
        "summary": "Update signature via carrier",
        "description": "Update the signature on a signature pad. This request waits with the response until the checkout process is finished.\nThe token is the carrierAccessToken from the signature pad creation request.\nReturns the accessToken to access the wallet invite page or gate page.\nTo complete the checkout process, use POST /organization-sites/{organizationSiteKey}/consignor/delivery-note-bundles-checkout.\n",
        "operationId": "externalPatchSignaturePad",
        "security": [],
        "tags": [
          "external",
          "signature pads"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/SignaturePadTypeParam"
          },
          {
            "$ref": "#/components/parameters/TokenTypeParam"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PNGFileRequest"
        },
        "responses": {
          "200": {
            "description": "Return accessToken to access the wallet invite page or gate page\nas soon as the checkout process is finished.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "accessToken"
                  ],
                  "properties": {
                    "accessToken": {
                      "$ref": "#/components/schemas/Token64LengthType"
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "signature was updated in signature pad"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/external/bundle/wallet-invite": {
      "get": {
        "summary": "Get data for wallet invite page",
        "description": "Returns all data that is necessary to build the wallet invite page.\nThe token is the accessToken from the checkout response.\nThe access token expires 2 days after checkin or 10 weeks after checkout.\n",
        "operationId": "externalGetBundleWalletInviteData",
        "security": [],
        "tags": [
          "external",
          "wallet invite"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/TokenTypeParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Response contains wallet data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiBundleWalletInviteData"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/external/tour/wallet-invite": {
      "get": {
        "summary": "Get tour data for wallet invite page",
        "description": "Returns all data that is necessary to build the tour wallet invite page.\nThe token is the accessToken from the checkout response.\nThe access token expires 2 days after checkin or 10 weeks after checkout.\n",
        "operationId": "externalGetTourWalletInviteData",
        "security": [],
        "tags": [
          "external",
          "wallet invite",
          "tours"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/TokenTypeParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Response contains wallet data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourWalletInviteData"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/external/gate": {
      "get": {
        "summary": "Get data for gate page",
        "description": "Returns all data that is necessary to build the gate page.\nThe token is the accessToken from a wallet.\n",
        "operationId": "externalGetGateData",
        "security": [],
        "tags": [
          "external"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/TokenTypeParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Response contains gate data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleGateData"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/external/tour/gate": {
      "get": {
        "summary": "Get data for gate page",
        "description": "Returns all data that is necessary to build the tour gate page.\nThe token is the accessToken from a wallet.\n",
        "operationId": "externalGetTourGateData",
        "security": [],
        "tags": [
          "external"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/TokenTypeParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Response contains gate data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourGateData"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/external/signature-pads/checkout/bundle-data": {
      "get": {
        "summary": "Get bundle checkout data for external carrier signature.",
        "description": "Return all bundle data that is necessary for the carrier to sign\nthe checkout. The token is the carrierAccessToken.\n",
        "operationId": "externalGetDataForSignatureCheckout",
        "security": [],
        "tags": [
          "external",
          "signature pads"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/TokenTypeParam"
          }
        ],
        "responses": {
          "200": {
            "description": "data to show what to sign",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignaturePadBundlesCheckout"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/external/signature-pads/checkin/bundle-data": {
      "get": {
        "summary": "Get bundle checkin data for external carrier signature.",
        "description": "Return all bundle data that is necessary for the carrier to sign\nthe checkin. The token is the carrierAccessToken.\n",
        "operationId": "externalGetDataForSignatureCheckin",
        "security": [],
        "tags": [
          "external",
          "signature pads"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/TokenTypeParam"
          }
        ],
        "responses": {
          "200": {
            "description": "data to show what to sign",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignaturePadBundlesCheckin"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/external/signature-pads/{signaturePadType}/bundle-data/pdf": {
      "get": {
        "summary": "Get all delivery note PDFs as one pdf for signature pad",
        "description": "Return PDF with all delivery note pdfs from the checkout\n",
        "operationId": "externalGetPdfForSignature",
        "security": [],
        "tags": [
          "external",
          "signature pads",
          "pdf"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/SignaturePadTypeParam"
          },
          {
            "$ref": "#/components/parameters/TokenTypeParam"
          }
        ],
        "responses": {
          "200": {
            "description": "pdf with all information from the bundles that belong to the\ncheckout\n",
            "content": {
              "application/pdf": {
                "schema": {
                  "$ref": "#/components/schemas/BinaryFileType"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/external/signature-pads/checkin/delivery-note/{deliveryNoteKey}/pdf": {
      "get": {
        "summary": "Get a delivery note PDF by deliveryNoteKey",
        "description": "Return a PDF for a deliveryNoteKey for the checkin with carrier access key\n",
        "operationId": "externalGetSinglePdfForSignature",
        "security": [],
        "tags": [
          "external",
          "signature pads",
          "pdf"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          },
          {
            "$ref": "#/components/parameters/TokenTypeParam"
          }
        ],
        "responses": {
          "200": {
            "description": "the delivery note pdf\n",
            "content": {
              "application/pdf": {
                "schema": {
                  "$ref": "#/components/schemas/BinaryFileType"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/external/signature-pads/checkin/delivery-note/{deliveryNoteKey}/attachments/{attachmentKey}": {
      "get": {
        "summary": "Get a attachment by the attachmentKey for a checkin",
        "description": "Return a attachment by the attachmentKey for the checkin with carrier access key and the deliveryNoteKey\n",
        "operationId": "externalGetSingleAttachmentForSignature",
        "security": [],
        "tags": [
          "external",
          "signature pads",
          "pdf"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          },
          {
            "$ref": "#/components/parameters/attachmentKeyParam"
          },
          {
            "$ref": "#/components/parameters/TokenTypeParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Attachment",
            "$ref": "#/components/requestBodies/AttachmentFile"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/external/test-string-length": {
      "post": {
        "summary": "DEBUG - test accepted string length",
        "description": "Test accepted string length.\n",
        "operationId": "externalTestStringLength",
        "security": [],
        "tags": [
          "debug"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "msg"
                ],
                "properties": {
                  "msg": {
                    "type": "string",
                    "maxLength": 2
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Test was successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/external/gate/delivery-notes/{deliveryNoteKey}/pdf": {
      "get": {
        "summary": "Get PDF for gate page",
        "description": "Get a single delivery note PDF from a gate (checkout).\nThe token is the token from the gate url.\n",
        "operationId": "externalGetGateDeliveryNotePdf",
        "security": [],
        "tags": [
          "external",
          "pdf"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          },
          {
            "$ref": "#/components/parameters/TokenTypeParam"
          }
        ],
        "responses": {
          "200": {
            "description": "The delivery note pdf",
            "content": {
              "application/pdf": {
                "schema": {
                  "$ref": "#/components/schemas/BinaryFileType"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/external/tour/gate/delivery-notes/{deliveryNoteKey}/pdf": {
      "get": {
        "summary": "Get PDF for tour gate page",
        "description": "Get a single delivery note PDF from a tour gate (checkout).\nThe token is the token from the gate url.\n",
        "operationId": "externalGetTourGateDeliveryNotePdf",
        "security": [],
        "tags": [
          "external",
          "pdf"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          },
          {
            "$ref": "#/components/parameters/TokenTypeParam"
          }
        ],
        "responses": {
          "200": {
            "description": "The delivery note pdf",
            "content": {
              "application/pdf": {
                "schema": {
                  "$ref": "#/components/schemas/BinaryFileType"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/external/gate/delivery-note-pdfs": {
      "get": {
        "summary": "Get all delivery note PDFs as one PDF",
        "description": "Get all delivery note PDF's from a gate (checkout).\nThe token is the token from the gate URL.\n",
        "operationId": "externalGetGateDeliveryNotePdfs",
        "security": [],
        "tags": [
          "external",
          "pdf"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/TokenTypeParam"
          }
        ],
        "responses": {
          "200": {
            "description": "The delivery note pdf",
            "content": {
              "application/pdf": {
                "schema": {
                  "$ref": "#/components/schemas/BinaryFileType"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/external/tour/gate/delivery-note-pdfs": {
      "get": {
        "summary": "Get all delivery note PDFs as one PDF for a tour gate",
        "description": "Get all delivery note PDF's from a tour gate (checkout).\nThe token is the token from the gate URL.\n",
        "operationId": "externalGetTourGateDeliveryNotePdfs",
        "security": [],
        "tags": [
          "external",
          "pdf"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/TokenTypeParam"
          }
        ],
        "responses": {
          "200": {
            "description": "The delivery note pdf",
            "content": {
              "application/pdf": {
                "schema": {
                  "$ref": "#/components/schemas/BinaryFileType"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/external/gate/delivery-notes/{deliveryNoteKey}/complete-pdf": {
      "get": {
        "summary": "Get a complete sanitized pdf with checkout and checkin data",
        "description": "Get a complete sanitized pdf with checkout and checkin data: the delivery note,\nall attachments and all images\n",
        "operationId": "getExternalDeliveryNoteCompletePdf",
        "security": [],
        "tags": [
          "external",
          "pdf"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          },
          {
            "$ref": "#/components/parameters/TokenTypeParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PDFFileResponse"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/feedbacks": {
      "post": {
        "summary": "Post new feedback.",
        "description": "Post a new feedback element to the database.\n",
        "operationId": "postFeedback",
        "x-dls-requiredUserPermission": "user_feedbacks_create",
        "tags": [
          "feedback"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostFeedbackRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Feedback object stored in database"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/me/last-feedback-to-now": {
      "put": {
        "summary": "Set last time of feedback to now into user.",
        "description": "Set last time of feedback to now into user.\n",
        "operationId": "putLastTimeUserGaveFeedbackIntoUser",
        "x-dls-requiredUserPermission": "user_feedbacks_last_modify",
        "tags": [
          "feedback"
        ],
        "responses": {
          "204": {
            "description": "Last time from feedback patched into user."
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/service-provider/feedbacks": {
      "get": {
        "summary": "Get a list with all feedbacks.",
        "description": "Get a list with all feedbacks.\n",
        "operationId": "getFeedbacks",
        "x-dls-requiredUserPermission": "service_provider_user_feedbacks_read",
        "tags": [
          "feedback"
        ],
        "responses": {
          "200": {
            "description": "List of feedbacks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFeedbackResponseArray"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/delivery-notes/{deliveryNoteKey}/load-carriers": {
      "post": {
        "summary": "Add a new load carrier to delivery note.",
        "description": "Add a new load carrier to a existing delivery note.\nThe delivery note must be in a started checkin.\n",
        "operationId": "postConsigneeLoadCarrier",
        "x-dls-requiredOrganizationSitePermission": "consignee_load_carriers_create",
        "tags": [
          "load carriers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostLoadCarrierRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created load carrier with generated _key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoadCarrier"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "put": {
        "summary": "Replace all load carriers in delivery note",
        "description": "Replace all load carriers in a delivery note with new ones.\nThe delivery note must be in a started checkin.\n",
        "operationId": "putConsigneeLoadCarriers",
        "x-dls-requiredOrganizationSitePermission": "consignee_load_carriers_replace",
        "tags": [
          "load carriers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutLoadCarrierRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created load carriers with generated _key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoadCarriers"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "get": {
        "summary": "Get all load carriers of a delivery note.",
        "description": "Returns all load carriers of a delivery note.\n",
        "operationId": "getConsigneeLoadCarriers",
        "x-dls-requiredOrganizationSitePermission": "consignee_load_carriers_read",
        "tags": [
          "load carriers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Load carriers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LoadCarrier"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignor/delivery-note-bundles/{deliveryNoteBundleKey}/delivery-notes/{deliveryNoteKey}/load-carriers": {
      "post": {
        "summary": "Add a load carrier to a delivery note.",
        "description": "Add a load carrier to a delivery note.\nThe delivery note bundle must be in status 'open'.\n",
        "operationId": "postLoadCarrier",
        "x-dls-requiredOrganizationSitePermission": "loadcarrier_create",
        "tags": [
          "load carriers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteBundleKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostLoadCarrierRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created load carrier with generated id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoadCarrier"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "get": {
        "summary": "Get all load carriers for a delivery note.",
        "description": "Get all load carriers for a delivery note.\n",
        "operationId": "getLoadCarriers",
        "x-dls-requiredOrganizationSitePermission": "loadcarrier_read",
        "tags": [
          "load carriers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteBundleKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Load carriers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LoadCarrier"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "put": {
        "summary": "Replace all load carriers with new ones.",
        "description": "Replace all load carriers with new ones.\nThe delivery note bundle must be in status 'open'.\n",
        "operationId": "putLoadCarrier",
        "x-dls-requiredOrganizationSitePermission": "loadcarrier_modify",
        "tags": [
          "load carriers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteBundleKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutLoadCarrierRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Load carrier was modified"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignor/delivery-note-bundles/{deliveryNoteBundleKey}/delivery-notes/{deliveryNoteKey}/load-carriers/{loadCarrierKey}": {
      "patch": {
        "summary": "Update a load carrier.",
        "description": "Update a load carrier.\nThe delivery note bundle must be in status 'open'.\n",
        "operationId": "patchLoadCarrier",
        "x-dls-requiredOrganizationSitePermission": "loadcarrier_modify",
        "tags": [
          "load carriers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteBundleKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          },
          {
            "$ref": "#/components/parameters/loadCarrierKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchLoadCarrierRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Load carrier was modified"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "delete": {
        "summary": "Delete a load carrier from a delivery note.",
        "description": "Delete a load carrier from a delivery note.\nThe delivery note bundle must be in status 'open'.\n",
        "operationId": "deleteLoadCarrier",
        "x-dls-requiredOrganizationSitePermission": "loadcarrier_delete",
        "tags": [
          "load carriers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteBundleKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteKeyParam"
          },
          {
            "$ref": "#/components/parameters/loadCarrierKeyParam"
          }
        ],
        "responses": {
          "204": {
            "description": "Load carrier was deleted"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/delivery-note-bundle/{deliveryNoteBundleKey}/send-wallet-invite": {
      "post": {
        "summary": "Send wallet invite mail to driver",
        "description": "Send an email with a wallet invite link to the driver.\n",
        "operationId": "sendWalletInviteMailToDriver",
        "x-dls-requiredOrganizationSitePermission": "send_wallet_invite_emails",
        "tags": [
          "organization sites",
          "wallet invite notification"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/deliveryNoteBundleKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendNotificationEmailRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Wallet invite eMail was send to driver"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/tours/{tourKey}/send-wallet-invite": {
      "post": {
        "summary": "Send tour wallet invite mail to driver",
        "description": "Send an email with a tour wallet invite link to the driver.\n",
        "operationId": "sendTourWalletInviteMailToDriver",
        "x-dls-requiredOrganizationSitePermission": "send_wallet_invite_emails",
        "tags": [
          "organization sites",
          "wallet invite notification",
          "tours"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/tourKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendNotificationEmailRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Wallet invite eMail was send to driver"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organizations": {
      "get": {
        "summary": "Get all permitted organizations of user",
        "description": "Get all permitted organizations for the requesting user.\n",
        "operationId": "getOrganizations",
        "x-dls-requiredUserPermission": "organization_read",
        "tags": [
          "organizations"
        ],
        "responses": {
          "200": {
            "description": "Permitted organizations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organization"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organizations/{organizationKey}": {
      "get": {
        "summary": "Get single org by key of user",
        "description": "Get a single permitted organization of a user by organization key.\n",
        "operationId": "getOrganization",
        "x-dls-requiredOrganizationPermission": "organization_read",
        "tags": [
          "organizations"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Permitted organization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/platform/organization-sites": {
      "get": {
        "summary": "Get all organization sites",
        "description": "Get list of all organizations sites including their GLN and metadata.\nDoes not return archived organization sites\n",
        "operationId": "getPlatformOrganisationsSites",
        "tags": [
          "platform"
        ],
        "responses": {
          "200": {
            "description": "All OrganizationSite",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationSite"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/public/organizations": {
      "get": {
        "summary": "Get all ogranizations",
        "description": "Get all organization names.\n",
        "operationId": "getPublicOrganizations",
        "security": [],
        "tags": [
          "public"
        ],
        "responses": {
          "200": {
            "description": "Organization names",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPublicOrganizationsResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/public/reset-user-password": {
      "put": {
        "summary": "Initiate user password reset",
        "description": "Send link to reset the password.\nThe link is valid for 15 minutes.\n",
        "operationId": "putPublicResetUserPassword",
        "security": [],
        "tags": [
          "public",
          "users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutPublicResetUserPassword"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Email with the reset password link was send to the provided\nemail address.\n"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/public/complete-reset-user-password": {
      "post": {
        "summary": "Complete user password reset",
        "description": "Reset the user password with the provided password and the token.\n",
        "operationId": "postPublicCompleteResetUserPassword",
        "security": [],
        "tags": [
          "public",
          "users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostPublicCompleteResetUserPassword"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The user password was reset with the provided password.\nAny active session is removed.\n"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/service-provider/organizations": {
      "post": {
        "summary": "Create organization",
        "description": "Create a new organization and the first admin for this organization.\nThis endpoint is for the service provider.\nThe quotas are returned.\n",
        "operationId": "postServiceProviderOrganization",
        "x-dls-requiredUserPermission": "service_provider_organizations_create",
        "tags": [
          "service provider"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostOrganizationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Organization and admin user created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "get": {
        "summary": "get list of all organizations on the platform",
        "description": "Get a list of all organizations that are on the platform.\nThe quotas are returned.\n",
        "operationId": "getServiceProviderOrganizations",
        "x-dls-requiredUserPermission": "service_provider_organizations_read",
        "tags": [
          "service provider"
        ],
        "responses": {
          "200": {
            "description": "List of all organizations on the platform.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organizations"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/service-provider/organizations/{organizationKey}": {
      "patch": {
        "summary": "Update organization",
        "description": "Update a organization. All properties are optional.\nThe property phone numbers is replaced with the new property.\n",
        "operationId": "patchServiceProviderOrganization",
        "x-dls-requiredUserPermission": "service_provider_organizations_update",
        "tags": [
          "service provider"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchServiceProviderOrganizationRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The Organization was updated."
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/service-provider/billing/csv": {
      "get": {
        "summary": "Get billing CSV.",
        "description": "Get billing CSV for a specified timeframe.\nFrom and to must have millisecond resolution.\nConstrain: from <= timestamp < to\nAll times are in UTC.\n",
        "operationId": "getServiceProviderBillingCsv",
        "x-dls-requiredUserPermission": "service_provider_billing_csv_read",
        "tags": [
          "service provider"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/FromTimestampTypeParam"
          },
          {
            "$ref": "#/components/parameters/ToTimestampTypeParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/CSVFileResponse"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/service-provider/billing/csv-grouped-by-site/timestamp": {
      "get": {
        "summary": "Get billing CSV grouped by site transactions for a year and month.",
        "description": "Get billing CSV for a specified timestamp grouped by organization sites.\nAll times are in UTC.\n",
        "operationId": "getServiceProviderBillingCsvGroupedBySiteTimestamp",
        "x-dls-requiredUserPermission": "service_provider_billing_csv_read",
        "tags": [
          "service provider"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ZipTypeParam"
          },
          {
            "$ref": "#/components/parameters/MonthAndYearTimestampTypeParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/CSVFileResponse"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/service-provider/billing/csv-grouped-by-site/timeframe": {
      "get": {
        "summary": "Get billing CSV grouped by site transactions.",
        "description": "Get billing CSV for a specified timeframe grouped by organization sites.\nFrom and to must have millisecond resolution.\nConstrain: from <= timestamp < to\nAll times are in UTC.\nThe maximum range between from and to is 35 days.\n",
        "operationId": "getServiceProviderBillingCsvGroupedBySite",
        "x-dls-requiredUserPermission": "service_provider_billing_csv_read",
        "tags": [
          "service provider"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/FromTimestampTypeParam"
          },
          {
            "$ref": "#/components/parameters/ToTimestampTypeParam"
          },
          {
            "$ref": "#/components/parameters/ZipTypeParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/CSVFileResponse"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/carrier/tours": {
      "post": {
        "summary": "Create a new tour.",
        "description": "Creates a new tour for the organization site, with the deliveryNoteKeys.\n",
        "operationId": "postTour",
        "x-dls-requiredOrganizationSitePermission": "carrier_tours_create",
        "tags": [
          "tours"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostTourRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "result from operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "get": {
        "summary": "Get all tours from a site.",
        "description": "Get all tours from a site by the siteId.\n",
        "operationId": "getTours",
        "x-dls-requiredOrganizationSitePermission": "carrier_tours_read",
        "tags": [
          "tours"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "result from operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetToursResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/carrier/tours/{tourKey}": {
      "get": {
        "summary": "Get a tour.",
        "description": "Get a specifiy tour by the tour key, returns also more data for the delivery notes.\n",
        "operationId": "getTour",
        "x-dls-requiredOrganizationSitePermission": "carrier_tours_read",
        "tags": [
          "tours"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/tourKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "result from operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTourResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "put": {
        "summary": "Update a carrier tour.",
        "description": "Update a tour. This is only possible when the tour is not in the checkin. The delivery note keys are alwas needed.\nWhen all delivery notes from a tour are removed and the tour is in status 'sent' the tour will be deleted.\n",
        "operationId": "updateTour",
        "x-dls-requiredOrganizationSitePermission": "carrier_tours_update",
        "tags": [
          "tours"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/tourKeyParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostTourRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "result from operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "delete": {
        "summary": "Delete a carrier tour.",
        "description": "Delete a tour. This is only possible when not a signle delivery note from the tour is in checkin.\n",
        "operationId": "deleteTour",
        "x-dls-requiredOrganizationSitePermission": "carrier_tours_delete",
        "tags": [
          "tours"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/tourKeyParam"
          }
        ],
        "responses": {
          "204": {
            "description": "tour was deleted"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/tours": {
      "get": {
        "summary": "Get tour list as consignee",
        "description": "Get overview list of all tours from a consignee.\n",
        "operationId": "getConsigneeTours",
        "x-dls-requiredOrganizationSitePermission": "consignee_tour_read",
        "tags": [
          "tours"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "overview list of tours",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConsigneeTours"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/consignee/tours/{tourKey}": {
      "get": {
        "summary": "Get a tour as consignee",
        "description": "Get a specific tour by the tourKey from a consignee.\n",
        "operationId": "getConsigneeTour",
        "x-dls-requiredOrganizationSitePermission": "consignee_tour_read",
        "tags": [
          "tours"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/tourKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "result from operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConsigneeTour"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/carrier/tours/{tourKey}/checkout": {
      "post": {
        "summary": "Checkout a tour.",
        "description": "Checkout one tour. The tours must be in status 'open'.\n",
        "operationId": "postToursCheckout",
        "x-dls-requiredOrganizationSitePermission": "carrier_tours_checkout",
        "tags": [
          "tours"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/tourKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Data to view the wallet invite page URL as a QR code",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourCheckoutResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/organization-sites/{organizationSiteKey}/carrier/tours/{tourKey}/delivery-note-pdfs": {
      "get": {
        "summary": "Get all pdfs from a tour.",
        "description": "Get all pdfs from a tour by the tourKey.\n",
        "operationId": "getToursPdfs",
        "x-dls-requiredOrganizationSitePermission": "carrier_tours_read",
        "tags": [
          "tours"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organizationSiteKeyParam"
          },
          {
            "$ref": "#/components/parameters/tourKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "body contains array of pdfs in binary format",
            "content": {
              "application/pdf": {
                "schema": {
                  "$ref": "#/components/schemas/BinaryFileType"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/me": {
      "get": {
        "summary": "Get information of user the logged in user",
        "description": "Get user information of the logged in user.\n",
        "operationId": "getMe",
        "x-dls-requiredUserPermission": "user_me_read",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "User information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/me/organization-sites": {
      "get": {
        "summary": "Get organizations sites of the logged in user",
        "description": "Get accessible organization sites for the user\nReturns also the allowRemoteAccess flag.\n",
        "operationId": "getAccessibleUserSites",
        "x-dls-requiredUserPermission": "user_me_read",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "Accessible organization sites for the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationSite"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/users": {
      "patch": {
        "summary": "Update user information",
        "description": "Patch basic user information, like fullName.\n",
        "operationId": "patchBasicUser",
        "x-dls-requiredUserPermission": "user_modify",
        "tags": [
          "users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchBasicUserInformationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New user information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInformation"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/users/request-change-password": {
      "put": {
        "summary": "Request user password reset",
        "description": "Request the change of the password of the current user.\nAfter this the request must be completed with a 2fa code in another request,\nwhich will be sent to the users email.\n",
        "operationId": "requestChangePassword",
        "x-dls-requiredUserPermission": "user_modify",
        "tags": [
          "users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestChangePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password change request was successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwoFaExpiry"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/users/complete-change-password": {
      "post": {
        "summary": "Complete the password reset",
        "description": "Completes the password request with the correct 2fa code given in the body.\nThe current session is closed.\n",
        "operationId": "completeChangePassword",
        "x-dls-requiredUserPermission": "user_modify",
        "tags": [
          "users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TwoFaCodeRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Password change was successfully"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/users/request-change-email-address": {
      "put": {
        "summary": "Request email address change",
        "description": "Request the change of the email address of the current user.\nAfter this an 2fa code is send to the old email address and another\n2fa code is send to the new email address. Both 2fa codes are needed\nto complete the email address change.\n",
        "operationId": "requestChangeEmailAddress",
        "x-dls-requiredUserPermission": "user_modify",
        "tags": [
          "users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeEmailAddressRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Expiry of 2fa codes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwoFaExpiry"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/users/complete-change-email-address": {
      "post": {
        "summary": "Complete email address change",
        "description": "Completes the email address change with both 2fa codes. One from the\nold email address and one from the new email address.\nThe current session is closed.\n",
        "operationId": "completeChangeEmailAddress",
        "x-dls-requiredUserPermission": "user_modify",
        "tags": [
          "users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteChangeEmailAddressRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Email changed successfully"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/users/signature": {
      "put": {
        "summary": "Update the consignee users signature",
        "description": "Set or update the consignee users signature.\n",
        "operationId": "changeUsersSignature",
        "x-dls-requiredUserPermission": "user_signature_replace",
        "tags": [
          "users"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PNGFileRequest"
        },
        "responses": {
          "204": {
            "description": "signature was updated for user"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      },
      "get": {
        "summary": "Get consignee signature",
        "description": "Get the consignee users signature.\n",
        "operationId": "getUserSignature",
        "x-dls-requiredUserPermission": "user_signature_read",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PNGFileResponse"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/me/terms-of-service": {
      "post": {
        "summary": "Accept ToS",
        "description": "Accept latest version of terms of of service\n",
        "operationId": "postMeAcceptTermsOfService",
        "tags": [
          "users"
        ],
        "responses": {
          "204": {
            "description": "Accepted latest version of terms of service"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/me/supply-chains": {
      "get": {
        "summary": "Get all weighted supply chains for the user",
        "description": "Get a weighted list of all supply chains for the logged in user.\n",
        "operationId": "getMeSupplyChains",
        "x-dls-requiredUserPermission": "user_me_read",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "All OrganizationSite",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeSupplyChainsResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/me/quotas": {
      "get": {
        "summary": "Get organization quotas for the calling user",
        "description": "Get organization quotas for the calling user for the current month.\nAPI users count into users.\n",
        "operationId": "getMeQuotas",
        "x-dls-requiredUserPermission": "user_me_read",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "Quotas for the organization for the current month.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMeQuotasResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CarrierShareDeliveryNoteAccessRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "targetOrganizationSiteKey",
          "deliveryNoteKeys"
        ],
        "properties": {
          "targetOrganizationSiteKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "deliveryNoteKeys": {
            "$ref": "#/components/schemas/KeyArrayType"
          }
        }
      },
      "CarrierLookupDeliveryNoteKeysRequest": {
        "type": "array",
        "minItems": 1,
        "items": {
          "$ref": "#/components/schemas/DeliveryNoteLookup"
        }
      },
      "DeliveryNoteLookup": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "consignorGln",
          "number"
        ],
        "properties": {
          "consignorGln": {
            "$ref": "#/components/schemas/NameType"
          },
          "orderNumber": {
            "$ref": "#/components/schemas/NameType"
          },
          "number": {
            "$ref": "#/components/schemas/NameType"
          }
        }
      },
      "CarrierLookupDeliveryNoteResponse": {
        "type": "array",
        "minItems": 1,
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/DeliveryNoteLookupResponse"
          }
        }
      },
      "DeliveryNoteLookupResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_key",
          "dateCreated",
          "number",
          "orderNumber"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "number": {
            "$ref": "#/components/schemas/DeliveryNoteNumber"
          },
          "orderNumber": {
            "$ref": "#/components/schemas/OrderNoteNumberAsStringType"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "description": "Login",
        "additionalProperties": false,
        "required": [
          "emailAddress",
          "password"
        ],
        "properties": {
          "emailAddress": {
            "$ref": "#/components/schemas/NameType"
          },
          "password": {
            "$ref": "#/components/schemas/PasswordType"
          },
          "twoFaCode": {
            "$ref": "#/components/schemas/TwoFaCode"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "description": "getActiveUserByEmail response",
        "additionalProperties": true,
        "required": [
          "_key",
          "_id",
          "password",
          "salt",
          "active",
          "emailAddress",
          "fullName",
          "permissions",
          "sessionId"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "_id": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "salt": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "emailAddress": {
            "$ref": "#/components/schemas/EmailAddressType"
          },
          "fullName": {
            "$ref": "#/components/schemas/NameType"
          },
          "permissions": {
            "$ref": "#/components/schemas/OrganizationPermissionsType"
          },
          "sessionId": {
            "$ref": "#/components/schemas/Base64Type"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "description": "Login response data",
        "additionalProperties": false,
        "required": [
          "_key",
          "emailAddress",
          "fullName",
          "sessionId",
          "termsOfService",
          "organizations",
          "organizationSites",
          "permissions",
          "roles",
          "dateLastFeedback"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "emailAddress": {
            "$ref": "#/components/schemas/EmailAddressType"
          },
          "fullName": {
            "$ref": "#/components/schemas/NameType"
          },
          "sessionId": {
            "$ref": "#/components/schemas/Base64Type"
          },
          "termsOfService": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "version",
              "accepted",
              "dateAccepted",
              "dateAcceptUntil"
            ],
            "properties": {
              "version": {
                "type": "number",
                "minimum": 1
              },
              "accepted": {
                "type": "boolean"
              },
              "dateAccepted": {
                "$ref": "#/components/schemas/TimestampType"
              },
              "dateAcceptUntil": {
                "$ref": "#/components/schemas/TimestampType"
              }
            }
          },
          "organizations": {
            "$ref": "#/components/schemas/Organizations"
          },
          "organizationSites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoginOrganizationSite"
            }
          },
          "permissions": {
            "$ref": "#/components/schemas/UserPermissionsType"
          },
          "roles": {
            "$ref": "#/components/schemas/UserRolesArray"
          },
          "dateLastFeedback": {
            "$ref": "#/components/schemas/TimestampType"
          }
        }
      },
      "LoginOrganizationSite": {
        "type": "object",
        "description": "one site of an organization",
        "additionalProperties": false,
        "required": [
          "_key",
          "gln",
          "name",
          "fullSiteName",
          "phoneNumbers",
          "consignor",
          "carrier",
          "consignee",
          "organizationKey",
          "allowRemoteAccess",
          "roles"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "address": {
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "gln": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "fullSiteName": {
            "$ref": "#/components/schemas/NameType"
          },
          "phoneNumbers": {
            "$ref": "#/components/schemas/PhoneNumbersArray"
          },
          "consignor": {
            "type": "boolean"
          },
          "carrier": {
            "type": "boolean"
          },
          "consignee": {
            "type": "boolean"
          },
          "organizationKey": {
            "$ref": "#/components/schemas/KeyXorEmptyKeyType"
          },
          "allowRemoteAccess": {
            "type": "boolean"
          },
          "roles": {
            "$ref": "#/components/schemas/UserRolesArray"
          },
          "permissions": {
            "$ref": "#/components/schemas/OrganizationSitePermissionsType"
          }
        }
      },
      "PostTourRequest": {
        "type": "object",
        "additionalProperties": false,
        "description": "create new tour with supply chain keys",
        "required": [
          "deliveryNoteKeys"
        ],
        "properties": {
          "externalTourName": {
            "$ref": "#/components/schemas/ExternalTourName",
            "default": ""
          },
          "deliveryNoteKeys": {
            "$ref": "#/components/schemas/KeyArrayType"
          }
        }
      },
      "PostBundleRequest": {
        "type": "object",
        "additionalProperties": false,
        "description": "create new bundle with supply chain keys",
        "required": [
          "name",
          "consignorKey",
          "carrierKey",
          "consigneeKey",
          "deliveryNoteKeys"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "consignorKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "carrierKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "consigneeKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "deliveryNoteKeys": {
            "$ref": "#/components/schemas/KeyArrayType"
          }
        }
      },
      "PatchBundleRequest": {
        "type": "object",
        "additionalProperties": false,
        "description": "update name, consignor, carrier or consignee key",
        "required": [
          "name",
          "consignorKey",
          "carrierKey",
          "consigneeKey"
        ],
        "properties": {
          "name": {
            "$ref": "#/components/schemas/NameType"
          },
          "consignorKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "carrierKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "consigneeKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "carrierNameOutgoing": {
            "$ref": "#/components/schemas/NameType"
          },
          "carrierNumberPlateOutgoing": {
            "$ref": "#/components/schemas/NameType"
          },
          "carrierEmailAddressOutgoing": {
            "$ref": "#/components/schemas/EmailAddressType"
          }
        }
      },
      "PatchDeliveryNoteRequest": {
        "additionalProperties": false,
        "description": "Update metadata of a delivery note",
        "properties": {
          "fileName": {
            "$ref": "#/components/schemas/NameType"
          },
          "number": {
            "$ref": "#/components/schemas/DeliveryNoteNumber"
          },
          "orderNumber": {
            "$ref": "#/components/schemas/OrderNoteNumberAsStringType"
          },
          "dateAnnounced": {
            "$ref": "#/components/schemas/TimestampType"
          }
        }
      },
      "ApiUserRequest": {
        "type": "object",
        "additionalProperties": false,
        "description": "Post Api key",
        "required": [
          "organizationSiteKeys",
          "roles",
          "emailAddress",
          "dateExpired",
          "fullName"
        ],
        "properties": {
          "organizationSiteKeys": {
            "$ref": "#/components/schemas/KeyArrayType"
          },
          "roles": {
            "$ref": "#/components/schemas/UserRolesArray"
          },
          "emailAddress": {
            "$ref": "#/components/schemas/EmailAddressType"
          },
          "dateExpired": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "fullName": {
            "$ref": "#/components/schemas/NameType"
          }
        }
      },
      "PostApiUserResponse": {
        "type": "object",
        "required": [
          "sessionId"
        ],
        "properties": {
          "sessionId": {
            "$ref": "#/components/schemas/NameType"
          }
        }
      },
      "ApiUser": {
        "type": "object",
        "required": [
          "_key",
          "dateCreated",
          "dateExpired",
          "emailAddress",
          "fullName",
          "roles",
          "sites"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "emailAddress": {
            "$ref": "#/components/schemas/EmailAddressType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "dateExpired": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "fullName": {
            "$ref": "#/components/schemas/NameType"
          },
          "roles": {
            "$ref": "#/components/schemas/UserRolesArray"
          },
          "sites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationSiteWithRoles"
            }
          }
        }
      },
      "ApiUsers": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ApiUser"
        }
      },
      "SupplyChain": {
        "type": "object",
        "additionalProperties": false,
        "description": "Full name of target organization site and the key",
        "required": [
          "name",
          "organizationSiteKey"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "organizationSiteKey": {
            "$ref": "#/components/schemas/KeyType"
          }
        }
      },
      "DiscrepanciesChoices": {
        "type": "object",
        "additionalProperties": false,
        "description": "Choices for discrepancies",
        "required": [
          "reasons",
          "units"
        ],
        "properties": {
          "reasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscrepanciesReason"
            }
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscrepanciesUnit"
            }
          }
        }
      },
      "DiscrepanciesReason": {
        "type": "string",
        "enum": [
          "OVER_DELIVERED",
          "UNDER_DELIVERED",
          "NOT_ANNOUNCED",
          "REFUSAL_OF_ACCEPTANCE"
        ]
      },
      "DiscrepanciesUnit": {
        "type": "string",
        "enum": [
          "PIECE",
          "QUARTER_DISPLAY",
          "HALF_DISPLAY",
          "CARTON",
          "PALLET",
          "COLLI"
        ]
      },
      "DeliveryNoteBundleOverview": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "bundleNumber",
          "dateCreated",
          "dateShipped",
          "_key",
          "consignorKey",
          "carrierKey",
          "consigneeKey",
          "consignorName",
          "carrierName",
          "consigneeName",
          "status",
          "numberOfDeliveryNotes",
          "accessToken",
          "discrepancies",
          "palletTickets",
          "consignorLoadCarrierExchange",
          "consigneeLoadCarrierExchange"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "consignorKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "carrierKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "consigneeKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "bundleNumber": {
            "$ref": "#/components/schemas/NameType"
          },
          "name": {
            "$ref": "#/components/schemas/NameType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "dateShipped": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "consignorName": {
            "$ref": "#/components/schemas/NameType"
          },
          "carrierName": {
            "$ref": "#/components/schemas/NameType"
          },
          "consigneeName": {
            "$ref": "#/components/schemas/NameType"
          },
          "status": {
            "$ref": "#/components/schemas/BundleStatus"
          },
          "numberOfDeliveryNotes": {
            "type": "integer",
            "minimum": 0
          },
          "dateAnnounced": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "accessToken": {
            "$ref": "#/components/schemas/Token64LengthXorEmptyType"
          },
          "discrepancies": {
            "type": "boolean"
          },
          "palletTickets": {
            "type": "boolean"
          },
          "consignorLoadCarrierExchange": {
            "type": "boolean"
          },
          "consigneeLoadCarrierExchange": {
            "type": "boolean"
          }
        }
      },
      "DeliveryNoteBundlesOverview": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "$ref": "#/components/schemas/DeliveryNoteBundleOverview"
        }
      },
      "DeliveryNoteBundle": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_key",
          "name",
          "bundleNumber",
          "dateCreated",
          "dateShipped",
          "consignorKey",
          "carrierKey",
          "consigneeKey",
          "consignorName",
          "carrierName",
          "consigneeName",
          "status",
          "carrierNameOutgoing",
          "carrierNumberPlateOutgoing",
          "carrierEmailAddressOutgoing",
          "deliveryNotes",
          "discrepancies",
          "palletTickets",
          "consignorLoadCarrierExchange",
          "consigneeLoadCarrierExchange"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "name": {
            "$ref": "#/components/schemas/NameType"
          },
          "bundleNumber": {
            "$ref": "#/components/schemas/NameType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "dateShipped": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "consignorKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "carrierKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "consigneeKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "consignorName": {
            "$ref": "#/components/schemas/NameType"
          },
          "carrierName": {
            "$ref": "#/components/schemas/NameType"
          },
          "consigneeName": {
            "$ref": "#/components/schemas/NameType"
          },
          "status": {
            "$ref": "#/components/schemas/BundleStatus"
          },
          "carrierNameOutgoing": {
            "$ref": "#/components/schemas/NameType"
          },
          "carrierNumberPlateOutgoing": {
            "type": "string"
          },
          "carrierEmailAddressOutgoing": {
            "$ref": "#/components/schemas/EmailAddressType"
          },
          "deliveryNotes": {
            "$ref": "#/components/schemas/DeliveryNoteArray"
          },
          "discrepancies": {
            "type": "boolean"
          },
          "palletTickets": {
            "type": "boolean"
          },
          "consignorLoadCarrierExchange": {
            "type": "boolean"
          },
          "consigneeLoadCarrierExchange": {
            "type": "boolean"
          }
        }
      },
      "CheckinsForDriverUpdate": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_key",
          "driverName",
          "driverNumberPlate"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "driverName": {
            "$ref": "#/components/schemas/NameType"
          },
          "driverNumberPlate": {
            "$ref": "#/components/schemas/NameType"
          }
        }
      },
      "ConsigneeDeliveryNoteBundle": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_key",
          "status",
          "name",
          "bundleNumber",
          "dateCreated",
          "dateShipped",
          "consignorKey",
          "carrierKey",
          "consigneeKey",
          "consignorName",
          "carrierName",
          "consigneeName",
          "deliveryNotes",
          "discrepancies",
          "palletTickets",
          "consignorLoadCarrierExchange",
          "consigneeLoadCarrierExchange"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "status": {
            "enum": [
              "sent",
              "closed"
            ]
          },
          "name": {
            "$ref": "#/components/schemas/NameType"
          },
          "bundleNumber": {
            "$ref": "#/components/schemas/NameType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "dateShipped": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "consignorKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "carrierKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "consigneeKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "consignorName": {
            "$ref": "#/components/schemas/NameType"
          },
          "carrierName": {
            "$ref": "#/components/schemas/NameType"
          },
          "consigneeName": {
            "$ref": "#/components/schemas/NameType"
          },
          "deliveryNotes": {
            "$ref": "#/components/schemas/DeliveryNoteArray"
          },
          "discrepancies": {
            "type": "boolean"
          },
          "palletTickets": {
            "type": "boolean"
          },
          "consignorLoadCarrierExchange": {
            "type": "boolean"
          },
          "consigneeLoadCarrierExchange": {
            "type": "boolean"
          }
        }
      },
      "CarrierDeliveryNoteBundle": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_key",
          "name",
          "bundleNumber",
          "dateCreated",
          "consignorKey",
          "carrierKey",
          "consigneeKey",
          "consignorName",
          "carrierName",
          "consigneeName",
          "status",
          "carrierEmailAddressOutgoing",
          "carrierNumberPlateOutgoing",
          "carrierNameOutgoing",
          "dateShipped",
          "deliveryNotes",
          "discrepancies",
          "palletTickets",
          "consignorLoadCarrierExchange",
          "consigneeLoadCarrierExchange"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "name": {
            "$ref": "#/components/schemas/NameType"
          },
          "bundleNumber": {
            "$ref": "#/components/schemas/NameType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "consignorKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "carrierKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "consigneeKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "consignorName": {
            "$ref": "#/components/schemas/NameType"
          },
          "carrierName": {
            "$ref": "#/components/schemas/NameType"
          },
          "consigneeName": {
            "$ref": "#/components/schemas/NameType"
          },
          "status": {
            "enum": [
              "sent",
              "closed"
            ]
          },
          "carrierEmailAddressOutgoing": {
            "$ref": "#/components/schemas/EmailAddressType"
          },
          "carrierNumberPlateOutgoing": {
            "$ref": "#/components/schemas/NameType"
          },
          "carrierNameOutgoing": {
            "$ref": "#/components/schemas/NameType"
          },
          "dateShipped": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "deliveryNotes": {
            "$ref": "#/components/schemas/DeliveryNoteArray"
          },
          "discrepancies": {
            "type": "boolean"
          },
          "palletTickets": {
            "type": "boolean"
          },
          "consignorLoadCarrierExchange": {
            "type": "boolean"
          },
          "consigneeLoadCarrierExchange": {
            "type": "boolean"
          }
        }
      },
      "CarrierDeliveryNoteBundleOverview": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "bundleNumber",
          "dateCreated",
          "dateShipped",
          "_key",
          "consignorKey",
          "carrierKey",
          "consigneeKey",
          "consignorName",
          "carrierName",
          "consigneeName",
          "status",
          "numberOfDeliveryNotes",
          "carrierNumberPlateOutgoing",
          "carrierNameOutgoing",
          "accessToken",
          "discrepancies",
          "palletTickets",
          "consignorLoadCarrierExchange",
          "consigneeLoadCarrierExchange",
          "areDeliveryNotesNotInTours"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "consignorKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "carrierKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "consigneeKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "bundleNumber": {
            "$ref": "#/components/schemas/NameType"
          },
          "name": {
            "$ref": "#/components/schemas/NameType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "dateShipped": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "consignorName": {
            "$ref": "#/components/schemas/NameType"
          },
          "carrierName": {
            "$ref": "#/components/schemas/NameType"
          },
          "consigneeName": {
            "$ref": "#/components/schemas/NameType"
          },
          "status": {
            "$ref": "#/components/schemas/BundleStatus"
          },
          "numberOfDeliveryNotes": {
            "type": "integer",
            "minimum": 0
          },
          "dateAnnounced": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "carrierNumberPlateOutgoing": {
            "$ref": "#/components/schemas/NameType"
          },
          "carrierNameOutgoing": {
            "$ref": "#/components/schemas/NameType"
          },
          "accessToken": {
            "$ref": "#/components/schemas/Token64LengthType"
          },
          "discrepancies": {
            "type": "boolean"
          },
          "palletTickets": {
            "type": "boolean"
          },
          "consignorLoadCarrierExchange": {
            "type": "boolean"
          },
          "consigneeLoadCarrierExchange": {
            "type": "boolean"
          },
          "areDeliveryNotesNotInTours": {
            "type": "boolean"
          }
        }
      },
      "CarrierDeliveryNoteBundlesOverview": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "$ref": "#/components/schemas/CarrierDeliveryNoteBundleOverview"
        }
      },
      "DeliveryNoteBundlesCheckout": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "deliveryNoteBundleKeys",
          "carrierSignature"
        ],
        "properties": {
          "deliveryNoteBundleKeys": {
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/KeyType"
            }
          },
          "carrierSignature": {
            "$ref": "#/components/schemas/Base64Type",
            "description": "base64 encoded png of the signature"
          }
        }
      },
      "CreateDeliveryNoteResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_key",
          "dateCreated",
          "dateAnnounced",
          "fileName",
          "number",
          "orderNumber",
          "attachmentsCount"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "dateAnnounced": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "fileName": {
            "$ref": "#/components/schemas/NameType"
          },
          "number": {
            "$ref": "#/components/schemas/DeliveryNoteNumber"
          },
          "orderNumber": {
            "$ref": "#/components/schemas/OrderNoteNumberAsStringType"
          },
          "attachmentsCount": {
            "$ref": "#/components/schemas/AttachmentsCount"
          }
        }
      },
      "DeliveryNote": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_key",
          "dateCreated",
          "fileName",
          "number",
          "loadCarriers",
          "discrepancies",
          "fineDiscrepancies",
          "palletTickets",
          "consignorLoadCarrierImages",
          "consigneeLoadCarrierImages",
          "consignorLoadCarrierExchange",
          "consigneeLoadCarrierExchange",
          "attachmentsCount"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "dateReceived": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "dateShipped": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "fileName": {
            "type": "string"
          },
          "dateAnnounced": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "orderNumber": {
            "$ref": "#/components/schemas/OrderNoteNumberAsStringType"
          },
          "number": {
            "$ref": "#/components/schemas/DeliveryNoteNumber"
          },
          "carrierNumberPlateIncoming": {
            "$ref": "#/components/schemas/NameType"
          },
          "attachmentsCount": {
            "$ref": "#/components/schemas/AttachmentsCount"
          },
          "loadCarriers": {
            "$ref": "#/components/schemas/LoadCarriers"
          },
          "discrepancies": {
            "type": "boolean"
          },
          "fineDiscrepancies": {
            "type": "boolean"
          },
          "palletTickets": {
            "type": "boolean"
          },
          "consignorLoadCarrierImages": {
            "type": "boolean"
          },
          "consigneeLoadCarrierImages": {
            "type": "boolean"
          },
          "consignorLoadCarrierExchange": {
            "type": "boolean"
          },
          "consigneeLoadCarrierExchange": {
            "type": "boolean"
          }
        }
      },
      "DeliveryNoteArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DeliveryNote"
        }
      },
      "DeliveryNoteInTour": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_key",
          "dateCreated",
          "dateShipped",
          "fileName",
          "orderNumber",
          "number",
          "loadCarriers",
          "discrepancies",
          "fineDiscrepancies",
          "palletTickets",
          "consignorLoadCarrierImages",
          "consigneeLoadCarrierImages",
          "consignorLoadCarrierExchange",
          "consigneeLoadCarrierExchange",
          "dateAnnounced",
          "consignorName",
          "carrierName",
          "consigneeName",
          "attachmentsCount"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "dateReceived": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "dateShipped": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "fileName": {
            "type": "string"
          },
          "dateAnnounced": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "orderNumber": {
            "$ref": "#/components/schemas/OrderNoteNumberAsStringType"
          },
          "number": {
            "$ref": "#/components/schemas/DeliveryNoteNumber"
          },
          "loadCarriers": {
            "$ref": "#/components/schemas/LoadCarriers"
          },
          "discrepancies": {
            "type": "boolean"
          },
          "fineDiscrepancies": {
            "type": "boolean"
          },
          "palletTickets": {
            "type": "boolean"
          },
          "consignorLoadCarrierImages": {
            "type": "boolean"
          },
          "consigneeLoadCarrierImages": {
            "type": "boolean"
          },
          "consignorLoadCarrierExchange": {
            "type": "boolean"
          },
          "consigneeLoadCarrierExchange": {
            "type": "boolean"
          },
          "consignorName": {
            "$ref": "#/components/schemas/NameType"
          },
          "carrierName": {
            "$ref": "#/components/schemas/NameType"
          },
          "consigneeName": {
            "$ref": "#/components/schemas/NameType"
          },
          "attachmentsCount": {
            "$ref": "#/components/schemas/AttachmentsCount"
          }
        }
      },
      "DeliveryNoteArrayInTour": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DeliveryNoteInTour"
        }
      },
      "DeliveryNoteInPool": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_key",
          "dateCreated",
          "dateAnnounced",
          "dateShipped",
          "dateReceived",
          "number",
          "orderNumber",
          "fileName",
          "loadCarriers",
          "discrepancies",
          "fineDiscrepancies",
          "palletTickets",
          "consignorLoadCarrierImages",
          "consigneeLoadCarrierImages",
          "consignorLoadCarrierExchange",
          "consigneeLoadCarrierExchange",
          "consignorKey",
          "consignorName",
          "carrierName",
          "consigneeName",
          "deliveryNoteBundleKey",
          "deliveryNoteBundleName",
          "deliveryNoteBundleNumber",
          "deliveryNoteBundleStatus",
          "attachmentsCount"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "dateAnnounced": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "dateShipped": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "dateReceived": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "fileName": {
            "$ref": "#/components/schemas/NameType"
          },
          "orderNumber": {
            "$ref": "#/components/schemas/NameType"
          },
          "number": {
            "$ref": "#/components/schemas/NameType"
          },
          "loadCarriers": {
            "$ref": "#/components/schemas/LoadCarriers"
          },
          "discrepancies": {
            "type": "boolean"
          },
          "fineDiscrepancies": {
            "type": "boolean"
          },
          "palletTickets": {
            "type": "boolean"
          },
          "consignorLoadCarrierImages": {
            "type": "boolean"
          },
          "consigneeLoadCarrierImages": {
            "type": "boolean"
          },
          "consignorLoadCarrierExchange": {
            "type": "boolean"
          },
          "consigneeLoadCarrierExchange": {
            "type": "boolean"
          },
          "consignorKey": {
            "$ref": "#/components/schemas/KeyXorEmptyKeyType"
          },
          "consignorName": {
            "$ref": "#/components/schemas/NameType"
          },
          "carrierName": {
            "$ref": "#/components/schemas/NameType"
          },
          "consigneeName": {
            "$ref": "#/components/schemas/NameType"
          },
          "deliveryNoteBundleKey": {
            "$ref": "#/components/schemas/KeyXorEmptyKeyType"
          },
          "deliveryNoteBundleName": {
            "$ref": "#/components/schemas/NameType"
          },
          "deliveryNoteBundleNumber": {
            "$ref": "#/components/schemas/NameType"
          },
          "deliveryNoteBundleStatus": {
            "enum": [
              "-",
              "open",
              "sent",
              "closed"
            ]
          },
          "attachmentsCount": {
            "$ref": "#/components/schemas/AttachmentsCount"
          }
        }
      },
      "DeliveryNoteInPoolArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DeliveryNoteInPool"
        }
      },
      "SingleDeliveryNote": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_key",
          "dateCreated",
          "dateAnnounced",
          "dateShipped",
          "dateReceived",
          "fileName",
          "number",
          "orderNumber",
          "loadCarriers",
          "discrepancies",
          "fineDiscrepancies",
          "palletTickets",
          "consignorLoadCarrierImages",
          "consigneeLoadCarrierImages",
          "consignorLoadCarrierExchange",
          "consigneeLoadCarrierExchange",
          "consignorKey",
          "partOfTour",
          "tourKey",
          "externalTourName",
          "tourNumber",
          "consignorName",
          "carrierName",
          "consigneeName",
          "carrierNumberPlateOutgoing",
          "carrierNumberPlateIncoming",
          "deliveryNoteBundleKey",
          "deliveryNoteBundleName",
          "deliveryNoteBundleNumber",
          "deliveryNoteBundleStatus",
          "attachmentsCount"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "dateAnnounced": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "dateShipped": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "dateReceived": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "fileName": {
            "$ref": "#/components/schemas/NameType"
          },
          "orderNumber": {
            "$ref": "#/components/schemas/NameType"
          },
          "number": {
            "$ref": "#/components/schemas/NameType"
          },
          "loadCarriers": {
            "$ref": "#/components/schemas/LoadCarriers"
          },
          "discrepancies": {
            "type": "boolean"
          },
          "fineDiscrepancies": {
            "type": "boolean"
          },
          "palletTickets": {
            "type": "boolean"
          },
          "consignorLoadCarrierImages": {
            "type": "boolean"
          },
          "consigneeLoadCarrierImages": {
            "type": "boolean"
          },
          "consignorLoadCarrierExchange": {
            "type": "boolean"
          },
          "consigneeLoadCarrierExchange": {
            "type": "boolean"
          },
          "partOfTour": {
            "type": "boolean"
          },
          "tourKey": {
            "$ref": "#/components/schemas/KeyXorEmptyKeyType"
          },
          "externalTourName": {
            "$ref": "#/components/schemas/NameType"
          },
          "tourNumber": {
            "$ref": "#/components/schemas/NameType"
          },
          "consignorKey": {
            "$ref": "#/components/schemas/KeyXorEmptyKeyType"
          },
          "consignorName": {
            "$ref": "#/components/schemas/NameType"
          },
          "carrierName": {
            "$ref": "#/components/schemas/NameType"
          },
          "consigneeName": {
            "$ref": "#/components/schemas/NameType"
          },
          "carrierNumberPlateOutgoing": {
            "$ref": "#/components/schemas/NameType"
          },
          "carrierNumberPlateIncoming": {
            "$ref": "#/components/schemas/NameType"
          },
          "deliveryNoteBundleKey": {
            "$ref": "#/components/schemas/KeyXorEmptyKeyType"
          },
          "deliveryNoteBundleName": {
            "$ref": "#/components/schemas/NameType"
          },
          "deliveryNoteBundleNumber": {
            "$ref": "#/components/schemas/NameType"
          },
          "deliveryNoteBundleStatus": {
            "enum": [
              "-",
              "open",
              "sent",
              "closed"
            ]
          },
          "checkinKey": {
            "$ref": "#/components/schemas/KeyXorEmptyKeyType"
          },
          "attachmentsCount": {
            "$ref": "#/components/schemas/AttachmentsCount"
          }
        }
      },
      "ConsigneeDeliveryNoteInPool": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_key",
          "dateCreated",
          "dateAnnounced",
          "dateShipped",
          "dateReceived",
          "fileName",
          "number",
          "loadCarriers",
          "discrepancies",
          "fineDiscrepancies",
          "palletTickets",
          "consignorLoadCarrierImages",
          "consigneeLoadCarrierImages",
          "consignorLoadCarrierExchange",
          "consigneeLoadCarrierExchange",
          "tourKey",
          "externalTourName",
          "tourNumber",
          "consignorName",
          "carrierName",
          "consigneeName",
          "carrierNumberPlateIncoming",
          "deliveryNoteBundleKey",
          "deliveryNoteBundleName",
          "deliveryNoteBundleNumber",
          "deliveryNoteBundleStatus",
          "checkinKey",
          "attachmentsCount"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "dateAnnounced": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "dateShipped": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "dateReceived": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "fileName": {
            "$ref": "#/components/schemas/NameType"
          },
          "orderNumber": {
            "$ref": "#/components/schemas/NameType"
          },
          "number": {
            "$ref": "#/components/schemas/NameType"
          },
          "loadCarriers": {
            "$ref": "#/components/schemas/LoadCarriers"
          },
          "discrepancies": {
            "type": "boolean"
          },
          "fineDiscrepancies": {
            "type": "boolean"
          },
          "palletTickets": {
            "type": "boolean"
          },
          "consignorLoadCarrierImages": {
            "type": "boolean"
          },
          "consigneeLoadCarrierImages": {
            "type": "boolean"
          },
          "consignorLoadCarrierExchange": {
            "type": "boolean"
          },
          "consigneeLoadCarrierExchange": {
            "type": "boolean"
          },
          "tourKey": {
            "$ref": "#/components/schemas/KeyXorEmptyKeyType"
          },
          "externalTourName": {
            "$ref": "#/components/schemas/NameType"
          },
          "tourNumber": {
            "$ref": "#/components/schemas/NameType"
          },
          "consignorName": {
            "$ref": "#/components/schemas/NameType"
          },
          "carrierName": {
            "$ref": "#/components/schemas/NameType"
          },
          "consigneeName": {
            "$ref": "#/components/schemas/NameType"
          },
          "carrierNumberPlateIncoming": {
            "$ref": "#/components/schemas/NameType"
          },
          "deliveryNoteBundleKey": {
            "$ref": "#/components/schemas/KeyXorEmptyKeyType"
          },
          "deliveryNoteBundleName": {
            "$ref": "#/components/schemas/NameType"
          },
          "deliveryNoteBundleNumber": {
            "$ref": "#/components/schemas/NameType"
          },
          "deliveryNoteBundleStatus": {
            "enum": [
              "sent",
              "closed"
            ]
          },
          "checkinKey": {
            "$ref": "#/components/schemas/KeyXorEmptyKeyType"
          },
          "attachmentsCount": {
            "$ref": "#/components/schemas/AttachmentsCount"
          }
        }
      },
      "ConsigneeDeliveryNotesInPool": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ConsigneeDeliveryNoteInPool"
        }
      },
      "CarrierDeliveryNoteInPool": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_key",
          "dateCreated",
          "dateAnnounced",
          "dateShipped",
          "dateReceived",
          "fileName",
          "number",
          "loadCarriers",
          "discrepancies",
          "fineDiscrepancies",
          "palletTickets",
          "consignorLoadCarrierImages",
          "consigneeLoadCarrierImages",
          "consignorLoadCarrierExchange",
          "consigneeLoadCarrierExchange",
          "partOfTour",
          "tourKey",
          "externalTourName",
          "tourNumber",
          "consignorName",
          "carrierName",
          "consigneeName",
          "carrierNumberPlateOutgoing",
          "carrierNumberPlateIncoming",
          "deliveryNoteBundleKey",
          "deliveryNoteBundleName",
          "deliveryNoteBundleNumber",
          "deliveryNoteBundleStatus",
          "checkinKey",
          "attachmentsCount"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "dateAnnounced": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "dateShipped": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "dateReceived": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "fileName": {
            "$ref": "#/components/schemas/NameType"
          },
          "orderNumber": {
            "$ref": "#/components/schemas/NameType"
          },
          "number": {
            "$ref": "#/components/schemas/NameType"
          },
          "loadCarriers": {
            "$ref": "#/components/schemas/LoadCarriers"
          },
          "discrepancies": {
            "type": "boolean"
          },
          "fineDiscrepancies": {
            "type": "boolean"
          },
          "palletTickets": {
            "type": "boolean"
          },
          "consignorLoadCarrierImages": {
            "type": "boolean"
          },
          "consigneeLoadCarrierImages": {
            "type": "boolean"
          },
          "consignorLoadCarrierExchange": {
            "type": "boolean"
          },
          "consigneeLoadCarrierExchange": {
            "type": "boolean"
          },
          "partOfTour": {
            "type": "boolean"
          },
          "tourKey": {
            "$ref": "#/components/schemas/KeyXorEmptyKeyType"
          },
          "externalTourName": {
            "$ref": "#/components/schemas/NameType"
          },
          "tourNumber": {
            "$ref": "#/components/schemas/NameType"
          },
          "consignorName": {
            "$ref": "#/components/schemas/NameType"
          },
          "carrierName": {
            "$ref": "#/components/schemas/NameType"
          },
          "consigneeName": {
            "$ref": "#/components/schemas/NameType"
          },
          "carrierNumberPlateOutgoing": {
            "$ref": "#/components/schemas/NameType"
          },
          "carrierNumberPlateIncoming": {
            "$ref": "#/components/schemas/NameType"
          },
          "deliveryNoteBundleKey": {
            "$ref": "#/components/schemas/KeyXorEmptyKeyType"
          },
          "deliveryNoteBundleName": {
            "$ref": "#/components/schemas/NameType"
          },
          "deliveryNoteBundleNumber": {
            "$ref": "#/components/schemas/NameType"
          },
          "deliveryNoteBundleStatus": {
            "enum": [
              "sent",
              "closed"
            ]
          },
          "checkinKey": {
            "$ref": "#/components/schemas/KeyXorEmptyKeyType"
          },
          "attachmentsCount": {
            "$ref": "#/components/schemas/AttachmentsCount"
          }
        }
      },
      "CarrierDeliveryNotesInPool": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CarrierDeliveryNoteInPool"
        }
      },
      "Organization": {
        "type": "object",
        "description": "one organization the user belongs to",
        "additionalProperties": false,
        "required": [
          "_key",
          "dateCreated",
          "name",
          "gln",
          "phoneNumbers",
          "sites"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "name": {
            "$ref": "#/components/schemas/NameType"
          },
          "address": {
            "$ref": "#/components/schemas/NameType"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "gln": {
            "$ref": "#/components/schemas/NameType"
          },
          "phoneNumbers": {
            "$ref": "#/components/schemas/PhoneNumbersArray"
          },
          "sites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationSite"
            }
          },
          "contact": {
            "additionalProperties": false,
            "required": [
              "name",
              "emailAddress",
              "phoneNumbers"
            ],
            "properties": {
              "name": {
                "$ref": "#/components/schemas/NameType"
              },
              "address": {
                "$ref": "#/components/schemas/NameType"
              },
              "location": {
                "$ref": "#/components/schemas/Location"
              },
              "emailAddress": {
                "$ref": "#/components/schemas/EmailAddressType",
                "default": ""
              },
              "phoneNumbers": {
                "$ref": "#/components/schemas/PhoneNumbersArray"
              }
            }
          },
          "quotas": {
            "$ref": "#/components/schemas/Quotas"
          },
          "permissions": {
            "$ref": "#/components/schemas/OrganizationPermissionsType"
          }
        }
      },
      "Organizations": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Organization"
        }
      },
      "PostOrganizationRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "organization",
          "adminUser"
        ],
        "properties": {
          "organization": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "name",
              "location",
              "gln",
              "phoneNumbers",
              "quotas"
            ],
            "properties": {
              "name": {
                "$ref": "#/components/schemas/OrgNameType"
              },
              "location": {
                "$ref": "#/components/schemas/Location"
              },
              "gln": {
                "$ref": "#/components/schemas/NameType"
              },
              "phoneNumbers": {
                "$ref": "#/components/schemas/PhoneNumbersArray"
              },
              "quotas": {
                "$ref": "#/components/schemas/Quotas"
              }
            }
          },
          "adminUser": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "name",
              "emailAddress"
            ],
            "properties": {
              "name": {
                "$ref": "#/components/schemas/NameType"
              },
              "emailAddress": {
                "$ref": "#/components/schemas/EmailAddressType"
              }
            }
          },
          "contact": {
            "$ref": "#/components/schemas/ServiceProviderOrganizationContact"
          }
        }
      },
      "ServiceProviderOrganizationContact": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "emailAddress",
          "phoneNumbers",
          "location"
        ],
        "properties": {
          "name": {
            "$ref": "#/components/schemas/NameType"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "emailAddress": {
            "$ref": "#/components/schemas/EmailAddressType",
            "default": ""
          },
          "phoneNumbers": {
            "$ref": "#/components/schemas/PhoneNumbersArray"
          }
        }
      },
      "Quotas": {
        "type": "object",
        "additionalProperties": false,
        "description": "quotas per organization",
        "required": [
          "maxUsers",
          "maxOrganizationSites",
          "maxDeliveryNotesPerMonth",
          "maxDeliveryNoteAttachments",
          "maxBundlesPerMonth",
          "maxCheckoutsPerMonth",
          "maxToursPerMonth",
          "maxCheckinsPerMonth"
        ],
        "properties": {
          "maxUsers": {
            "type": "number",
            "minimum": 0
          },
          "maxOrganizationSites": {
            "type": "number",
            "minimum": 0
          },
          "maxDeliveryNotesPerMonth": {
            "type": "number",
            "minimum": 0
          },
          "maxDeliveryNoteAttachments": {
            "type": "number",
            "minimum": 0
          },
          "maxBundlesPerMonth": {
            "type": "number",
            "minimum": 0
          },
          "maxCheckoutsPerMonth": {
            "type": "number",
            "minimum": 0
          },
          "maxToursPerMonth": {
            "type": "number",
            "minimum": 0
          },
          "maxCheckinsPerMonth": {
            "type": "number",
            "minimum": 0
          }
        }
      },
      "PatchServiceProviderOrganizationRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "$ref": "#/components/schemas/OrgNameType"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "gln": {
            "$ref": "#/components/schemas/NameType"
          },
          "phoneNumbers": {
            "$ref": "#/components/schemas/PhoneNumbersArray"
          },
          "contact": {
            "$ref": "#/components/schemas/ServiceProviderOrganizationContact"
          },
          "quotas": {
            "$ref": "#/components/schemas/Quotas"
          }
        }
      },
      "OrganizationSite": {
        "type": "object",
        "description": "one site of an organization",
        "additionalProperties": false,
        "required": [
          "_key",
          "name",
          "fullSiteName",
          "gln",
          "phoneNumbers",
          "consignor",
          "carrier",
          "consignee"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "name": {
            "$ref": "#/components/schemas/NameType"
          },
          "fullSiteName": {
            "$ref": "#/components/schemas/NameType"
          },
          "address": {
            "$ref": "#/components/schemas/NameType"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "gln": {
            "$ref": "#/components/schemas/NameType"
          },
          "phoneNumbers": {
            "$ref": "#/components/schemas/PhoneNumbersArray"
          },
          "consignor": {
            "type": "boolean"
          },
          "carrier": {
            "type": "boolean"
          },
          "consignee": {
            "type": "boolean"
          },
          "permissions": {
            "$ref": "#/components/schemas/OrganizationSitePermissionsType"
          },
          "roles": {
            "$ref": "#/components/schemas/UserRolesArray"
          },
          "dateArchived": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "allowRemoteAccess": {
            "type": "boolean"
          }
        }
      },
      "OrganizationSiteWithRoles": {
        "type": "object",
        "description": "one site of an organization",
        "additionalProperties": false,
        "required": [
          "_key",
          "gln",
          "name",
          "phoneNumbers",
          "consignor",
          "carrier",
          "consignee",
          "roles"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "address": {
            "$ref": "#/components/schemas/NameType"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "gln": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "phoneNumbers": {
            "$ref": "#/components/schemas/PhoneNumbersArray"
          },
          "consignor": {
            "type": "boolean"
          },
          "carrier": {
            "type": "boolean"
          },
          "consignee": {
            "type": "boolean"
          },
          "roles": {
            "$ref": "#/components/schemas/UserRolesArray"
          },
          "permissions": {
            "$ref": "#/components/schemas/OrganizationSitePermissionsType"
          }
        }
      },
      "AttachmentResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_key",
          "contentType",
          "fileName",
          "dateCreated"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "contentType": {
            "$ref": "#/components/schemas/FileTypes"
          },
          "fileName": {
            "$ref": "#/components/schemas/NameType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          }
        }
      },
      "GetAttachmentsResponse": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "$ref": "#/components/schemas/AttachmentResponse"
        }
      },
      "CarrierAttachmentResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_key",
          "dateCreated",
          "contentType",
          "fileName"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "contentType": {
            "$ref": "#/components/schemas/FileTypes"
          },
          "fileName": {
            "$ref": "#/components/schemas/NameType"
          }
        }
      },
      "ConsigneeAttachmentResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_key",
          "dateCreated",
          "contentType",
          "fileName",
          "fileSize",
          "type",
          "includes_discrepancies"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "contentType": {
            "$ref": "#/components/schemas/FileTypes"
          },
          "fileName": {
            "$ref": "#/components/schemas/NameType"
          },
          "fileSize": {
            "$ref": "#/components/schemas/PositiveIntegerType"
          },
          "type": {
            "$ref": "#/components/schemas/AttachmentBlobTypes"
          },
          "includes_discrepancies": {
            "type": "boolean"
          }
        }
      },
      "GetCarrierAttachmentsResponse": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "$ref": "#/components/schemas/CarrierAttachmentResponse"
        }
      },
      "GetConsigneeAttachmentsResponse": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "$ref": "#/components/schemas/ConsigneeAttachmentResponse"
        }
      },
      "DiscrepancyRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "article",
          "reason",
          "number",
          "unit"
        ],
        "properties": {
          "article": {
            "$ref": "#/components/schemas/NameType"
          },
          "reason": {
            "$ref": "#/components/schemas/DiscrepanciesReason"
          },
          "number": {
            "$ref": "#/components/schemas/PositiveIntegerType"
          },
          "unit": {
            "$ref": "#/components/schemas/DiscrepanciesUnit"
          }
        }
      },
      "DiscrepanciesRequest": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "$ref": "#/components/schemas/DiscrepancyRequest"
        }
      },
      "DiscrepancyResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_key",
          "dateCreated",
          "article",
          "reason",
          "number",
          "unit"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "article": {
            "$ref": "#/components/schemas/NameType"
          },
          "reason": {
            "$ref": "#/components/schemas/DiscrepanciesReason"
          },
          "number": {
            "$ref": "#/components/schemas/PositiveIntegerType"
          },
          "unit": {
            "$ref": "#/components/schemas/DiscrepanciesUnit"
          }
        }
      },
      "DiscrepanciesResponse": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "$ref": "#/components/schemas/DiscrepancyResponse"
        }
      },
      "GetDiscrepanciesResponse": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "$ref": "#/components/schemas/DiscrepancyResponse"
        }
      },
      "LoadCarrierTemplate": {
        "type": "object",
        "additionalProperties": false,
        "description": "Template for LoadCarrierType",
        "required": [
          "_key",
          "name",
          "description"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "GetLoadCarrierTemplatesResponse": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "$ref": "#/components/schemas/LoadCarrierTemplate"
        }
      },
      "LoadCarrierOperation": {
        "type": "string",
        "description": "Operations for LoadCarrier",
        "enum": [
          "adoption",
          "delivery"
        ]
      },
      "LoadCarrier": {
        "type": "object",
        "additionalProperties": false,
        "description": "Load carrier for delivery note",
        "required": [
          "_key",
          "name",
          "description",
          "operation",
          "quantity",
          "damaged",
          "notice"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "operation": {
            "$ref": "#/components/schemas/LoadCarrierOperation"
          },
          "quantity": {
            "type": "integer"
          },
          "damaged": {
            "type": "boolean"
          },
          "notice": {
            "$ref": "#/components/schemas/DescriptionType"
          }
        }
      },
      "LoadCarriers": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/LoadCarrier"
        }
      },
      "PostLoadCarrierRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "templateKey",
          "operation",
          "quantity",
          "damaged",
          "notice"
        ],
        "properties": {
          "templateKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "operation": {
            "$ref": "#/components/schemas/LoadCarrierOperation"
          },
          "quantity": {
            "type": "integer"
          },
          "damaged": {
            "type": "boolean"
          },
          "notice": {
            "$ref": "#/components/schemas/DescriptionType"
          }
        }
      },
      "PatchLoadCarrierRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "templateKey",
          "operation",
          "quantity",
          "damaged",
          "notice"
        ],
        "properties": {
          "templateKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "operation": {
            "$ref": "#/components/schemas/LoadCarrierOperation"
          },
          "quantity": {
            "type": "integer"
          },
          "damaged": {
            "type": "boolean"
          },
          "notice": {
            "$ref": "#/components/schemas/DescriptionType"
          }
        }
      },
      "PostPatchOrganizationSiteRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "gln",
          "location",
          "consignor",
          "carrier",
          "consignee",
          "phoneNumbers",
          "allowRemoteAccess"
        ],
        "properties": {
          "name": {
            "$ref": "#/components/schemas/OrgNameType"
          },
          "gln": {
            "$ref": "#/components/schemas/NameType"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "consignor": {
            "type": "boolean"
          },
          "carrier": {
            "type": "boolean"
          },
          "consignee": {
            "type": "boolean"
          },
          "phoneNumbers": {
            "$ref": "#/components/schemas/PhoneNumbersArray"
          },
          "allowRemoteAccess": {
            "type": "boolean"
          }
        }
      },
      "PutLoadCarrierRequest": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PatchLoadCarrierRequest"
        }
      },
      "CreateSignaturePadResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_key",
          "dateCreated",
          "type",
          "getToken",
          "carrierAccessToken"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "type": {
            "$ref": "#/components/schemas/SignaturePadType"
          },
          "getToken": {
            "$ref": "#/components/schemas/Token64LengthType"
          },
          "carrierAccessToken": {
            "$ref": "#/components/schemas/Token64LengthType"
          }
        }
      },
      "PatchBasicUserInformationRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "fullName"
        ],
        "properties": {
          "fullName": {
            "$ref": "#/components/schemas/NameType"
          }
        }
      },
      "UserInformation": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_key",
          "dateCreated",
          "fullName",
          "emailAddress"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "fullName": {
            "$ref": "#/components/schemas/NameType"
          },
          "emailAddress": {
            "$ref": "#/components/schemas/EmailAddressType"
          },
          "permissions": {
            "$ref": "#/components/schemas/UserPermissionsType"
          },
          "roles": {
            "$ref": "#/components/schemas/UserRolesArray"
          }
        }
      },
      "UsersInformation": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UserInformation"
        }
      },
      "AdministrationUserInformation": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_key",
          "dateCreated",
          "fullName",
          "emailAddress",
          "numberOfOrganizationSites",
          "hasRoleOrganizationAdministrator",
          "hasRoleSiteAdministrator"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "fullName": {
            "$ref": "#/components/schemas/NameType"
          },
          "emailAddress": {
            "$ref": "#/components/schemas/EmailAddressType"
          },
          "numberOfOrganizationSites": {
            "type": "number",
            "minimum": 0
          },
          "hasRoleOrganizationAdministrator": {
            "type": "boolean"
          },
          "hasRoleSiteAdministrator": {
            "type": "boolean"
          },
          "permissions": {
            "$ref": "#/components/schemas/UserPermissionsType"
          },
          "roles": {
            "$ref": "#/components/schemas/UserRolesArray"
          }
        }
      },
      "AdministrationUsersInformation": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AdministrationUserInformation"
        }
      },
      "AdministrationUserDetails": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_key",
          "dateCreated",
          "fullName",
          "emailAddress",
          "organizationSites",
          "organizationRoles"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "fullName": {
            "$ref": "#/components/schemas/NameType"
          },
          "emailAddress": {
            "$ref": "#/components/schemas/EmailAddressType"
          },
          "organizationSites": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "_key",
                "dateCreated",
                "name",
                "gln",
                "roles"
              ],
              "properties": {
                "_key": {
                  "$ref": "#/components/schemas/KeyType"
                },
                "dateCreated": {
                  "$ref": "#/components/schemas/TimestampType"
                },
                "name": {
                  "$ref": "#/components/schemas/NameType"
                },
                "gln": {
                  "$ref": "#/components/schemas/NameType"
                },
                "roles": {
                  "$ref": "#/components/schemas/UserRolesArray"
                },
                "permissions": {
                  "$ref": "#/components/schemas/OrganizationSitePermissionsType"
                }
              }
            }
          },
          "organizationRoles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "permissions": {
            "$ref": "#/components/schemas/UserPermissionsType"
          },
          "roles": {
            "$ref": "#/components/schemas/UserRolesArray"
          },
          "organizationPermissions": {
            "$ref": "#/components/schemas/OrganizationPermissionsType"
          }
        }
      },
      "BundleCheckoutResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "deliveryNoteBundles",
          "accessToken",
          "checkinToken"
        ],
        "properties": {
          "deliveryNoteBundles": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "_key",
                "bundleNumber",
                "consignorName",
                "carrierName",
                "consigneeName",
                "dateCheckout"
              ],
              "properties": {
                "_key": {
                  "$ref": "#/components/schemas/KeyType"
                },
                "bundleNumber": {
                  "$ref": "#/components/schemas/NameType"
                },
                "consignorName": {
                  "$ref": "#/components/schemas/NameType"
                },
                "carrierName": {
                  "$ref": "#/components/schemas/NameType"
                },
                "consigneeName": {
                  "$ref": "#/components/schemas/NameType"
                },
                "dateCheckout": {
                  "$ref": "#/components/schemas/TimestampType"
                }
              }
            }
          },
          "accessToken": {
            "$ref": "#/components/schemas/Token64LengthType"
          },
          "checkinToken": {
            "$ref": "#/components/schemas/Token64LengthType"
          }
        }
      },
      "BundleWalletInviteData": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "consignorName",
          "consignorAddress",
          "carrierName",
          "carrierAddress",
          "consigneeName",
          "consigneeAddress",
          "deliveryNoteBundleKey",
          "deliveryNoteBundleName",
          "deliveryNoteBundleNumber"
        ],
        "properties": {
          "consignorName": {
            "$ref": "#/components/schemas/NameType"
          },
          "consignorAddress": {
            "$ref": "#/components/schemas/NameType"
          },
          "carrierName": {
            "$ref": "#/components/schemas/NameType"
          },
          "carrierAddress": {
            "$ref": "#/components/schemas/NameType"
          },
          "consigneeName": {
            "$ref": "#/components/schemas/NameType"
          },
          "consigneeAddress": {
            "$ref": "#/components/schemas/NameType"
          },
          "deliveryNoteBundleKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "deliveryNoteBundleName": {
            "$ref": "#/components/schemas/NameType"
          },
          "deliveryNoteBundleNumber": {
            "$ref": "#/components/schemas/NameType"
          }
        }
      },
      "MultiBundleWalletInviteData": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "bundles",
          "iosWallet",
          "googlePlayJwt"
        ],
        "properties": {
          "bundles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BundleWalletInviteData"
            }
          },
          "iosWallet": {
            "type": "string"
          },
          "googlePlayJwt": {
            "type": "string"
          }
        }
      },
      "TourWalletInviteData": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "carrierName",
          "tourKey",
          "tourNumber",
          "externalTourName",
          "consignorNames",
          "consigneeNames",
          "iosWallet",
          "googlePlayJwt"
        ],
        "properties": {
          "carrierName": {
            "$ref": "#/components/schemas/NameType"
          },
          "tourKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "tourNumber": {
            "$ref": "#/components/schemas/NameType"
          },
          "externalTourName": {
            "$ref": "#/components/schemas/ExternalTourName"
          },
          "consignorNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameType"
            }
          },
          "consigneeNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameType"
            }
          },
          "iosWallet": {
            "type": "string"
          },
          "googlePlayJwt": {
            "type": "string"
          }
        }
      },
      "TourGateData": {
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "_key",
            "deliveryNotes",
            "tourNumber",
            "dateShipped"
          ],
          "properties": {
            "_key": {
              "$ref": "#/components/schemas/KeyType"
            },
            "tourNumber": {
              "$ref": "#/components/schemas/NameType"
            },
            "dateShipped": {
              "$ref": "#/components/schemas/TimestampType"
            },
            "deliveryNotes": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "_key",
                  "fileName",
                  "consigneeName",
                  "number",
                  "consignorGln",
                  "orderNumber"
                ],
                "properties": {
                  "_key": {
                    "$ref": "#/components/schemas/KeyType"
                  },
                  "fileName": {
                    "$ref": "#/components/schemas/NameType"
                  },
                  "consigneeName": {
                    "$ref": "#/components/schemas/NameType"
                  },
                  "number": {
                    "$ref": "#/components/schemas/DeliveryNoteNumber"
                  },
                  "orderNumber": {
                    "$ref": "#/components/schemas/NameType"
                  },
                  "consignorGln": {
                    "$ref": "#/components/schemas/NameType"
                  }
                }
              }
            }
          }
        }
      },
      "BundleGateData": {
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "_key",
            "consigneeName",
            "deliveryNotes",
            "bundleNumber",
            "dateShipped"
          ],
          "properties": {
            "_key": {
              "$ref": "#/components/schemas/KeyType"
            },
            "consigneeName": {
              "$ref": "#/components/schemas/NameType"
            },
            "bundleNumber": {
              "$ref": "#/components/schemas/NameType"
            },
            "dateShipped": {
              "$ref": "#/components/schemas/TimestampType"
            },
            "deliveryNotes": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "_key",
                  "fileName",
                  "number",
                  "orderNumber",
                  "consignorGln"
                ],
                "properties": {
                  "_key": {
                    "$ref": "#/components/schemas/KeyType"
                  },
                  "fileName": {
                    "$ref": "#/components/schemas/NameType"
                  },
                  "number": {
                    "$ref": "#/components/schemas/DeliveryNoteNumber"
                  },
                  "orderNumber": {
                    "$ref": "#/components/schemas/NameType"
                  },
                  "consignorGln": {
                    "$ref": "#/components/schemas/NameType"
                  }
                }
              }
            }
          }
        }
      },
      "SignaturePadBundlesCheckin": {
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "_key",
            "name",
            "bundleNumber",
            "consignorName",
            "carrierName",
            "consigneeName",
            "deliveryNotes"
          ],
          "properties": {
            "_key": {
              "$ref": "#/components/schemas/KeyType"
            },
            "name": {
              "$ref": "#/components/schemas/NameType"
            },
            "bundleNumber": {
              "$ref": "#/components/schemas/NameType"
            },
            "carrierNameIncoming": {
              "$ref": "#/components/schemas/NameType"
            },
            "carrierNumberPlateIncoming": {
              "$ref": "#/components/schemas/NameType"
            },
            "consignorName": {
              "$ref": "#/components/schemas/NameType"
            },
            "carrierName": {
              "$ref": "#/components/schemas/NameType"
            },
            "consigneeName": {
              "$ref": "#/components/schemas/NameType"
            },
            "deliveryNotes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SignaturePadBundlesDeliveryNoteCheckin"
              }
            }
          }
        }
      },
      "SignaturePadBundlesDeliveryNoteCheckin": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_key",
          "dateCreated",
          "fileName",
          "number",
          "discrepancies",
          "loadCarriers",
          "receiptsAttachments",
          "palletTicketsAttachments",
          "loadCarriersAttachments",
          "discrepanciesAttachments",
          "attachmentsCount"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "fileName": {
            "$ref": "#/components/schemas/NameType"
          },
          "orderNumber": {
            "$ref": "#/components/schemas/NameType"
          },
          "number": {
            "$ref": "#/components/schemas/NameType"
          },
          "discrepancies": {
            "$ref": "#/components/schemas/GetDiscrepanciesResponse"
          },
          "loadCarriers": {
            "$ref": "#/components/schemas/LoadCarriers"
          },
          "receiptsAttachments": {
            "$ref": "#/components/schemas/GetConsigneeAttachmentsResponse"
          },
          "palletTicketsAttachments": {
            "$ref": "#/components/schemas/GetConsigneeAttachmentsResponse"
          },
          "discrepanciesAttachments": {
            "$ref": "#/components/schemas/GetConsigneeAttachmentsResponse"
          },
          "loadCarriersAttachments": {
            "$ref": "#/components/schemas/GetConsigneeAttachmentsResponse"
          },
          "attachmentsCount": {
            "$ref": "#/components/schemas/AttachmentsCount"
          }
        }
      },
      "SignaturePadBundlesDeliveryNoteCheckout": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_key",
          "dateCreated",
          "fileName",
          "number",
          "orderNumber",
          "loadCarriers",
          "loadCarriersAttachments",
          "attachmentsCount"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "fileName": {
            "$ref": "#/components/schemas/NameType"
          },
          "orderNumber": {
            "$ref": "#/components/schemas/NameType"
          },
          "number": {
            "$ref": "#/components/schemas/NameType"
          },
          "loadCarriers": {
            "$ref": "#/components/schemas/LoadCarriers"
          },
          "loadCarriersAttachments": {
            "$ref": "#/components/schemas/GetCarrierAttachmentsResponse"
          },
          "attachmentsCount": {
            "$ref": "#/components/schemas/AttachmentsCount"
          }
        }
      },
      "SignaturePadBundlesCheckout": {
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "_key",
            "name",
            "bundleNumber",
            "carrierNameOutgoing",
            "carrierNumberPlateOutgoing",
            "carrierEmailAddressOutgoing",
            "consignorName",
            "carrierName",
            "consigneeName",
            "deliveryNotes"
          ],
          "properties": {
            "_key": {
              "$ref": "#/components/schemas/KeyType"
            },
            "name": {
              "$ref": "#/components/schemas/NameType"
            },
            "bundleNumber": {
              "$ref": "#/components/schemas/NameType"
            },
            "carrierNameOutgoing": {
              "$ref": "#/components/schemas/NameType"
            },
            "carrierNumberPlateOutgoing": {
              "type": "string"
            },
            "carrierEmailAddressOutgoing": {
              "$ref": "#/components/schemas/EmailAddressType"
            },
            "consignorName": {
              "$ref": "#/components/schemas/NameType"
            },
            "carrierName": {
              "$ref": "#/components/schemas/NameType"
            },
            "consigneeName": {
              "$ref": "#/components/schemas/NameType"
            },
            "deliveryNotes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SignaturePadBundlesDeliveryNoteCheckout"
              }
            }
          }
        }
      },
      "RequestChangePasswordRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "oldPassword",
          "newPassword"
        ],
        "properties": {
          "oldPassword": {
            "$ref": "#/components/schemas/PasswordType"
          },
          "newPassword": {
            "$ref": "#/components/schemas/PasswordType"
          }
        }
      },
      "ChangeEmailAddressRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "emailAddress"
        ],
        "properties": {
          "emailAddress": {
            "description": "The new email address",
            "$ref": "#/components/schemas/EmailAddressType"
          }
        }
      },
      "TwoFaCodeRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "twoFaCode"
        ],
        "properties": {
          "twoFaCode": {
            "$ref": "#/components/schemas/TwoFaCode"
          }
        }
      },
      "CompleteChangeEmailAddressRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "oldEmailAddress2FaCode",
          "newEmailAddress2FaCode"
        ],
        "properties": {
          "oldEmailAddress2FaCode": {
            "$ref": "#/components/schemas/TwoFaCode"
          },
          "newEmailAddress2FaCode": {
            "$ref": "#/components/schemas/TwoFaCode"
          }
        }
      },
      "TwoFaExpiry": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "twoFaExpiry"
        ],
        "properties": {
          "twoFaExpiry": {
            "$ref": "#/components/schemas/TimestampType"
          }
        }
      },
      "PostFeedbackRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "feedback",
          "text"
        ],
        "properties": {
          "feedback": {
            "type": "number",
            "minimum": 1,
            "maximum": 4
          },
          "text": {
            "$ref": "#/components/schemas/NameType"
          }
        }
      },
      "GetFeedbackResponseArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/GetFeedbackResponse"
        }
      },
      "GetFeedbackResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "feedback",
          "text",
          "dateCreated",
          "user"
        ],
        "properties": {
          "feedback": {
            "type": "number",
            "minimum": 0
          },
          "text": {
            "$ref": "#/components/schemas/NameType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "user": {
            "$ref": "#/components/schemas/FeedbackUser"
          }
        }
      },
      "FeedbackUser": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_key",
          "fullName",
          "emailAddress",
          "roles",
          "dateLastFeedback"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "emailAddress": {
            "$ref": "#/components/schemas/EmailAddressType"
          },
          "fullName": {
            "$ref": "#/components/schemas/NameType"
          },
          "roles": {
            "$ref": "#/components/schemas/UserRolesArray"
          },
          "dateLastFeedback": {
            "$ref": "#/components/schemas/TimestampType"
          }
        }
      },
      "UserForOrganizationAdminRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "fullName",
          "emailAddress",
          "organizationSiteKeysAndRoles"
        ],
        "properties": {
          "fullName": {
            "$ref": "#/components/schemas/NameType"
          },
          "emailAddress": {
            "$ref": "#/components/schemas/EmailAddressType"
          },
          "password": {
            "$ref": "#/components/schemas/PasswordType"
          },
          "organizationSiteKeysAndRoles": {
            "$ref": "#/components/schemas/OrganitazionSiteRolesArray"
          }
        }
      },
      "ApiUserForOrganizationAdminRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "fullName",
          "emailAddress",
          "dateExpired",
          "organizationSiteKeysAndRoles"
        ],
        "properties": {
          "fullName": {
            "$ref": "#/components/schemas/NameType"
          },
          "emailAddress": {
            "$ref": "#/components/schemas/EmailAddressType"
          },
          "dateExpired": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "organizationSiteKeysAndRoles": {
            "$ref": "#/components/schemas/OrganitazionSiteRolesArray"
          }
        }
      },
      "UserForOrganizationSiteAdminRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "fullName",
          "emailAddress",
          "roles"
        ],
        "properties": {
          "fullName": {
            "$ref": "#/components/schemas/NameType"
          },
          "emailAddress": {
            "$ref": "#/components/schemas/EmailAddressType"
          },
          "password": {
            "$ref": "#/components/schemas/PasswordType"
          },
          "roles": {
            "$ref": "#/components/schemas/UserRolesForSiteAdminArray"
          }
        }
      },
      "UserForOrganizationSitesAdminRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "fullName",
          "emailAddress",
          "organizationSiteKeysAndRoles"
        ],
        "properties": {
          "fullName": {
            "$ref": "#/components/schemas/NameType"
          },
          "emailAddress": {
            "$ref": "#/components/schemas/EmailAddressType"
          },
          "password": {
            "$ref": "#/components/schemas/PasswordType"
          },
          "organizationSiteKeysAndRoles": {
            "$ref": "#/components/schemas/OrganizationSitesRolesForSiteAdminArray"
          }
        }
      },
      "PatchUserForOrganizationSiteAdminRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "fullName",
          "emailAddress",
          "roles"
        ],
        "properties": {
          "fullName": {
            "$ref": "#/components/schemas/NameType"
          },
          "emailAddress": {
            "$ref": "#/components/schemas/EmailAddressType"
          },
          "roles": {
            "$ref": "#/components/schemas/UserRolesForSiteAdminArray"
          }
        }
      },
      "OrganizationSitesRolesForSiteAdminArray": {
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "organizationSiteKey",
            "roles"
          ],
          "properties": {
            "organizationSiteKey": {
              "$ref": "#/components/schemas/KeyType"
            },
            "roles": {
              "$ref": "#/components/schemas/UserRolesForSiteAdminArray"
            }
          }
        }
      },
      "OrganitazionSiteRoles": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "organizationSiteKey",
          "roles"
        ],
        "properties": {
          "organizationSiteKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "roles": {
            "$ref": "#/components/schemas/UserRolesArray"
          }
        }
      },
      "OrganitazionSiteRolesArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/OrganitazionSiteRoles"
        }
      },
      "OrganitazionSitesRolesPermissions": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "organizationSiteKey",
          "roles",
          "permissions"
        ],
        "properties": {
          "organizationSiteKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "roles": {
            "$ref": "#/components/schemas/UserRolesArray"
          },
          "permissions": {
            "$ref": "#/components/schemas/OrganizationSitePermissionsType"
          }
        }
      },
      "OrganitazionSitesRolesPermissionsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/OrganitazionSitesRolesPermissions"
        }
      },
      "SendNotificationEmailRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "emailAddress"
        ],
        "properties": {
          "emailAddress": {
            "$ref": "#/components/schemas/EmailAddressType"
          }
        }
      },
      "PutPublicResetUserPassword": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "emailAddress"
        ],
        "properties": {
          "emailAddress": {
            "$ref": "#/components/schemas/EmailAddressType"
          }
        }
      },
      "PostPublicCompleteResetUserPassword": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "token",
          "password"
        ],
        "properties": {
          "token": {
            "type": "string",
            "maxLength": 128
          },
          "password": {
            "$ref": "#/components/schemas/PasswordType"
          }
        }
      },
      "PutDriverInformation": {
        "description": "used to set driver information",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "driverName",
          "numberPlate"
        ],
        "properties": {
          "driverName": {
            "$ref": "#/components/schemas/NameType"
          },
          "numberPlate": {
            "$ref": "#/components/schemas/NameType"
          }
        }
      },
      "PostLoginTwoFARequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "emailAddress",
          "password"
        ],
        "properties": {
          "emailAddress": {
            "$ref": "#/components/schemas/EmailAddressType"
          },
          "password": {
            "$ref": "#/components/schemas/PasswordType"
          }
        }
      },
      "PostConsigneeCheckinDeliveryNotesRequest": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/KeyType"
        },
        "minItems": 1
      },
      "PatchConsigneeCheckinRequest": {
        "description": "Finish a checkin by sending consignee and carrier signature.",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "driverSignature",
          "consigneeSignature"
        ],
        "properties": {
          "driverSignature": {
            "$ref": "#/components/schemas/Base64Type",
            "description": "base64 encoded png of the signature"
          },
          "consigneeSignature": {
            "$ref": "#/components/schemas/Base64Type",
            "description": "base64 encoded png of the signature"
          }
        }
      },
      "PostAdministrationOrganizationSitesRemoteAccessRequest": {
        "description": "Share access of a site with another site from another organization.",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "targetOrganizationSiteKey",
          "userRemoteRoles"
        ],
        "properties": {
          "targetOrganizationSiteKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "userRemoteRoles": {
            "$ref": "#/components/schemas/UserRemoteRolesArray"
          }
        }
      },
      "PostDeliveryNoteRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "fileName",
          "deliveryNote",
          "number",
          "orderNumber"
        ],
        "properties": {
          "fileName": {
            "$ref": "#/components/schemas/NameType"
          },
          "deliveryNote": {
            "description": "the delivery note pdf encoded as base64",
            "type": "string"
          },
          "number": {
            "$ref": "#/components/schemas/DeliveryNoteNumber"
          },
          "orderNumber": {
            "$ref": "#/components/schemas/OrderNoteNumberAsStringType"
          },
          "dateAnnounced": {
            "$ref": "#/components/schemas/TimestampType"
          }
        }
      },
      "PostBundleResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_key",
          "status",
          "dateCreated",
          "name",
          "bundleNumber",
          "consignorKey",
          "carrierKey",
          "consigneeKey",
          "carrierNameOutgoing",
          "carrierNumberPlateOutgoing",
          "carrierEmailAddressOutgoing",
          "deliveryNoteKeys",
          "discrepancies",
          "palletTickets",
          "consignorLoadCarrierExchange",
          "consigneeLoadCarrierExchange"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "status": {
            "type": "string",
            "enum": [
              "open"
            ]
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "name": {
            "$ref": "#/components/schemas/NameType"
          },
          "bundleNumber": {
            "$ref": "#/components/schemas/NameType"
          },
          "consignorKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "carrierKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "consigneeKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "carrierNameOutgoing": {
            "$ref": "#/components/schemas/NameType"
          },
          "carrierNumberPlateOutgoing": {
            "$ref": "#/components/schemas/NameType"
          },
          "carrierEmailAddressOutgoing": {
            "$ref": "#/components/schemas/EmailAddressType"
          },
          "deliveryNoteKeys": {
            "$ref": "#/components/schemas/KeyArrayType"
          },
          "discrepancies": {
            "type": "boolean"
          },
          "palletTickets": {
            "type": "boolean"
          },
          "consignorLoadCarrierExchange": {
            "type": "boolean"
          },
          "consigneeLoadCarrierExchange": {
            "type": "boolean"
          }
        }
      },
      "TourResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_key",
          "dateCreated",
          "dateShipped",
          "tourNumber",
          "externalTourName",
          "carrierKey",
          "deliveryNoteKeys",
          "status",
          "hasDiscrepancies",
          "hasFineDiscrepancies"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "dateShipped": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "tourNumber": {
            "$ref": "#/components/schemas/NameType"
          },
          "externalTourName": {
            "$ref": "#/components/schemas/ExternalTourName"
          },
          "carrierKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "deliveryNoteKeys": {
            "$ref": "#/components/schemas/KeyArrayType"
          },
          "status": {
            "$ref": "#/components/schemas/TourStatus"
          },
          "hasDiscrepancies": {
            "type": "boolean"
          },
          "hasFineDiscrepancies": {
            "type": "boolean"
          },
          "accessToken": {
            "$ref": "#/components/schemas/Token64LengthXorEmptyType"
          }
        }
      },
      "GetTourResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_key",
          "dateCreated",
          "dateShipped",
          "tourNumber",
          "externalTourName",
          "carrierKey",
          "deliveryNotes",
          "status",
          "hasDiscrepancies",
          "hasFineDiscrepancies"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "dateShipped": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "tourNumber": {
            "$ref": "#/components/schemas/NameType"
          },
          "externalTourName": {
            "$ref": "#/components/schemas/ExternalTourName"
          },
          "carrierKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "deliveryNotes": {
            "$ref": "#/components/schemas/DeliveryNoteArrayInTour"
          },
          "status": {
            "$ref": "#/components/schemas/TourStatus"
          },
          "hasDiscrepancies": {
            "type": "boolean"
          },
          "hasFineDiscrepancies": {
            "type": "boolean"
          },
          "accessToken": {
            "$ref": "#/components/schemas/Token64LengthXorEmptyType"
          }
        }
      },
      "GetToursResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TourResponse"
        }
      },
      "GetConsigneeTour": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_key",
          "dateCreated",
          "dateShipped",
          "tourNumber",
          "externalTourName",
          "carrierKey",
          "deliveryNotes",
          "status"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "dateShipped": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "tourNumber": {
            "$ref": "#/components/schemas/NameType"
          },
          "externalTourName": {
            "$ref": "#/components/schemas/ExternalTourName"
          },
          "carrierKey": {
            "$ref": "#/components/schemas/KeyType"
          },
          "deliveryNotes": {
            "$ref": "#/components/schemas/DeliveryNoteArrayInTour"
          },
          "status": {
            "$ref": "#/components/schemas/TourStatus"
          }
        }
      },
      "GetConsigneeTours": {
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "_key",
            "carrierName",
            "dateCreated",
            "tourNumber",
            "externalTourName",
            "deliveryNoteCount",
            "dateCheckout",
            "status",
            "hasDiscrepancies",
            "hasFineDiscrepancies"
          ],
          "properties": {
            "_key": {
              "$ref": "#/components/schemas/KeyType"
            },
            "carrierName": {
              "$ref": "#/components/schemas/NameType"
            },
            "dateCreated": {
              "$ref": "#/components/schemas/TimestampType"
            },
            "tourNumber": {
              "$ref": "#/components/schemas/NameType"
            },
            "externalTourName": {
              "$ref": "#/components/schemas/ExternalTourName"
            },
            "deliveryNoteCount": {
              "type": "integer"
            },
            "dateCheckout": {
              "$ref": "#/components/schemas/TimestampType"
            },
            "status": {
              "$ref": "#/components/schemas/TourStatus"
            },
            "hasDiscrepancies": {
              "type": "boolean"
            },
            "hasFineDiscrepancies": {
              "type": "boolean"
            }
          }
        }
      },
      "TourCheckoutResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "tour",
          "accessToken",
          "checkinToken"
        ],
        "properties": {
          "tour": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "_key",
              "externalTourName",
              "tourNumber",
              "consignorName",
              "carrierName",
              "consigneeName",
              "dateCheckout"
            ],
            "properties": {
              "_key": {
                "$ref": "#/components/schemas/KeyType"
              },
              "externalTourName": {
                "$ref": "#/components/schemas/NameType"
              },
              "tourNumber": {
                "$ref": "#/components/schemas/NameType"
              },
              "consignorName": {
                "$ref": "#/components/schemas/NameType"
              },
              "carrierName": {
                "$ref": "#/components/schemas/NameType"
              },
              "consigneeName": {
                "$ref": "#/components/schemas/NameType"
              },
              "dateCheckout": {
                "$ref": "#/components/schemas/TimestampType"
              }
            }
          },
          "accessToken": {
            "$ref": "#/components/schemas/Token64LengthType"
          },
          "checkinToken": {
            "$ref": "#/components/schemas/Token64LengthType"
          }
        }
      },
      "GetConsigneeDeliveryNoteBundlesCheckinResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ConsigneeDeliveryNoteBundle"
        }
      },
      "GetPublicOrganizationsResponse": {
        "type": "array",
        "description": "List of organization names",
        "items": {
          "$ref": "#/components/schemas/NameType"
        }
      },
      "ConsigneeCheckinResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_key",
          "dateCreated",
          "dateFinished",
          "driverName",
          "driverNumberPlate",
          "status",
          "deliveryNotes"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "dateFinished": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "driverName": {
            "$ref": "#/components/schemas/NameType"
          },
          "driverNumberPlate": {
            "$ref": "#/components/schemas/NameType"
          },
          "status": {
            "type": "string",
            "enum": [
              "started",
              "finished"
            ]
          },
          "deliveryNotes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CheckinDeliveryNote"
            }
          }
        }
      },
      "CheckinDeliveryNote": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_key",
          "fileName",
          "number",
          "orderNumber",
          "consignorName",
          "carrierName",
          "consigneeName"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "fileName": {
            "$ref": "#/components/schemas/NameType"
          },
          "number": {
            "$ref": "#/components/schemas/NameType"
          },
          "orderNumber": {
            "$ref": "#/components/schemas/NameType"
          },
          "consignorName": {
            "$ref": "#/components/schemas/NameType"
          },
          "carrierName": {
            "$ref": "#/components/schemas/NameType"
          },
          "consigneeName": {
            "$ref": "#/components/schemas/NameType"
          }
        }
      },
      "DeliveryNoteDataForPdfMerge": {
        "type": "object",
        "description": "all data and all attchments to create the merged PDF",
        "additionalProperties": false,
        "required": [
          "_key",
          "nr",
          "number",
          "orderNumber",
          "ls",
          "bundlenr",
          "tournr",
          "date",
          "carrierSignatureOutgoing",
          "driverSignature",
          "consigneeSignature",
          "wa_load_carriers",
          "wa_pictures",
          "we_load_carriers",
          "we_pictures",
          "discrepancies",
          "we_discrepancy_pictures",
          "we_fine_discrepancies",
          "we_receipts",
          "we_pallettickets"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "nr": {
            "$ref": "#/components/schemas/NameType"
          },
          "number": {
            "$ref": "#/components/schemas/NameType"
          },
          "orderNumber": {
            "$ref": "#/components/schemas/NameType"
          },
          "ls": {
            "$ref": "#/components/schemas/NameType"
          },
          "bundlenr": {
            "$ref": "#/components/schemas/NameType"
          },
          "tournr": {
            "$ref": "#/components/schemas/NameType"
          },
          "date": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "carrierSignatureOutgoing": {
            "$ref": "#/components/schemas/CarrierSignatureOutgoing"
          },
          "driverSignature": {
            "$ref": "#/components/schemas/DriverSignature"
          },
          "consigneeSignature": {
            "$ref": "#/components/schemas/ConsigneeSignature"
          },
          "wa_load_carriers": {
            "$ref": "#/components/schemas/LoadCarriers"
          },
          "wa_pictures": {
            "$ref": "#/components/schemas/GetAttachmentsResponse"
          },
          "we_load_carriers": {
            "$ref": "#/components/schemas/LoadCarriers"
          },
          "we_pictures": {
            "$ref": "#/components/schemas/GetConsigneeAttachmentsResponse"
          },
          "discrepancies": {
            "$ref": "#/components/schemas/GetDiscrepanciesResponse"
          },
          "we_discrepancy_pictures": {
            "$ref": "#/components/schemas/GetConsigneeAttachmentsResponse"
          },
          "we_fine_discrepancies": {
            "$ref": "#/components/schemas/GetConsigneeAttachmentsResponse"
          },
          "we_receipts": {
            "$ref": "#/components/schemas/GetConsigneeAttachmentsResponse"
          },
          "we_pallettickets": {
            "$ref": "#/components/schemas/GetConsigneeAttachmentsResponse"
          },
          "ls_base64": {
            "$ref": "#/components/schemas/Base64Type"
          },
          "wapictures_base64": {
            "$ref": "#/components/schemas/Base64ArrayType"
          },
          "wepictures_base64": {
            "$ref": "#/components/schemas/Base64ArrayType"
          },
          "discrepancy_pictures_base64": {
            "$ref": "#/components/schemas/Base64ArrayType"
          },
          "fine_discrepancies_base64": {
            "$ref": "#/components/schemas/Base64ArrayType"
          },
          "receipts_base64": {
            "$ref": "#/components/schemas/Base64ArrayType"
          },
          "pallettickets_base64": {
            "$ref": "#/components/schemas/Base64ArrayType"
          },
          "wapictures": {
            "$ref": "#/components/schemas/NameArrayType"
          },
          "wepictures": {
            "$ref": "#/components/schemas/NameArrayType"
          },
          "discrepancy_pictures": {
            "$ref": "#/components/schemas/NameArrayType"
          },
          "fine_discrepancies": {
            "$ref": "#/components/schemas/NameArrayType"
          },
          "receipts": {
            "$ref": "#/components/schemas/NameArrayType"
          },
          "pallettickets": {
            "$ref": "#/components/schemas/NameArrayType"
          }
        }
      },
      "PostConsignorSignaturePad": {
        "type": "object",
        "additionalProperties": false,
        "description": "create new signature pad for checkout.",
        "required": [
          "deliveryNoteBundleKeys"
        ],
        "properties": {
          "deliveryNoteBundleKeys": {
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/KeyType"
            }
          }
        }
      },
      "CarrierSignatureOutgoing": {
        "type": "object",
        "description": "carrier signature data",
        "additionalProperties": false,
        "required": [
          "base64",
          "dateCreated",
          "driver"
        ],
        "properties": {
          "base64": {
            "$ref": "#/components/schemas/Base64Type"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "driver": {
            "$ref": "#/components/schemas/NameType"
          }
        }
      },
      "DriverSignature": {
        "type": "object",
        "description": "driver signature data",
        "additionalProperties": false,
        "required": [
          "base64",
          "dateFinished",
          "driver"
        ],
        "properties": {
          "base64": {
            "$ref": "#/components/schemas/Base64Type"
          },
          "dateFinished": {
            "$ref": "#/components/schemas/TimestampType"
          },
          "driver": {
            "$ref": "#/components/schemas/NameType"
          }
        }
      },
      "ConsigneeSignature": {
        "type": "object",
        "description": "consignee signature data",
        "additionalProperties": false,
        "required": [
          "base64",
          "name"
        ],
        "properties": {
          "base64": {
            "$ref": "#/components/schemas/Base64Type"
          },
          "name": {
            "$ref": "#/components/schemas/NameType"
          }
        }
      },
      "RemoteAccessOrganizationSite": {
        "type": "object",
        "description": "Response to get all sites that have remote access to a site",
        "additionalProperties": false,
        "required": [
          "_key",
          "name",
          "gln",
          "phoneNumbers",
          "roles",
          "organizationName"
        ],
        "properties": {
          "_key": {
            "$ref": "#/components/schemas/KeyType"
          },
          "name": {
            "$ref": "#/components/schemas/NameType"
          },
          "address": {
            "$ref": "#/components/schemas/NameType"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "gln": {
            "$ref": "#/components/schemas/NameType"
          },
          "phoneNumbers": {
            "$ref": "#/components/schemas/PhoneNumbersArray"
          },
          "roles": {
            "$ref": "#/components/schemas/UserRemoteRolesArray"
          },
          "organizationName": {
            "$ref": "#/components/schemas/NameType"
          }
        }
      },
      "RemoteAccessOrganizationSites": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/RemoteAccessOrganizationSite"
        }
      },
      "MeSupplyChainsResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "consignor",
          "carrier",
          "consignee"
        ],
        "properties": {
          "consignor": {
            "$ref": "#/components/schemas/SupplayChainArray"
          },
          "carrier": {
            "$ref": "#/components/schemas/SupplayChainArray"
          },
          "consignee": {
            "$ref": "#/components/schemas/SupplayChainArray"
          }
        }
      },
      "SupplayChainArray": {
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "_key",
            "name",
            "fullSiteName",
            "consignor",
            "carrier",
            "consignee",
            "organizationName",
            "weight"
          ],
          "properties": {
            "_key": {
              "$ref": "#/components/schemas/KeyType"
            },
            "name": {
              "$ref": "#/components/schemas/NameType"
            },
            "fullSiteName": {
              "$ref": "#/components/schemas/NameType"
            },
            "consignor": {
              "type": "boolean"
            },
            "carrier": {
              "type": "boolean"
            },
            "consignee": {
              "type": "boolean"
            },
            "organizationName": {
              "$ref": "#/components/schemas/NameType"
            },
            "weight": {
              "type": "integer",
              "minimum": 0,
              "maximum": 100
            }
          }
        }
      },
      "GetMeQuotasResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "year",
          "month",
          "maxQuotas",
          "usedQuotas"
        ],
        "properties": {
          "year": {
            "type": "number",
            "minimum": 2022,
            "maximum": 2099
          },
          "month": {
            "type": "number",
            "minimum": 1,
            "maximum": 12
          },
          "maxQuotas": {
            "$ref": "#/components/schemas/Quotas"
          },
          "usedQuotas": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "usedUsers",
              "usedOrganizationSites",
              "usedDeliveryNotesPerMonth",
              "usedBundlesPerMonth",
              "usedCheckoutsPerMonth",
              "usedToursPerMonth",
              "usedCheckinsPerMonth"
            ],
            "properties": {
              "usedUsers": {
                "type": "number",
                "minimum": 0
              },
              "usedOrganizationSites": {
                "type": "number",
                "minimum": 0
              },
              "usedDeliveryNotesPerMonth": {
                "type": "number",
                "minimum": 0
              },
              "usedBundlesPerMonth": {
                "type": "number",
                "minimum": 0
              },
              "usedCheckoutsPerMonth": {
                "type": "number",
                "minimum": 0
              },
              "usedToursPerMonth": {
                "type": "number",
                "minimum": 0
              },
              "usedCheckinsPerMonth": {
                "type": "number",
                "minimum": 0
              }
            }
          }
        }
      },
      "GetConsigneeDeliveryNotesForToken": {
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "deliveryNoteKey",
            "organizationSiteKey"
          ],
          "properties": {
            "deliveryNoteKey": {
              "$ref": "#/components/schemas/KeyType"
            },
            "organizationSiteKey": {
              "$ref": "#/components/schemas/KeyType"
            }
          }
        }
      },
      "KeyType": {
        "description": "one _key",
        "type": "string",
        "pattern": "^\\d+$"
      },
      "KeyXorEmptyKeyType": {
        "type": "string",
        "pattern": "^(?![\\s\\S])|\\d+$"
      },
      "KeyArrayType": {
        "type": "array",
        "description": "array of _keys",
        "items": {
          "$ref": "#/components/schemas/KeyType"
        }
      },
      "NameType": {
        "type": "string",
        "maxLength": 1024,
        "default": ""
      },
      "NameArrayType": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/NameType"
        }
      },
      "DescriptionType": {
        "type": "string",
        "maxLength": 10000
      },
      "EmptyArray": {
        "type": "array",
        "description": "empty array",
        "items": {
          "type": "integer"
        },
        "minItems": 0,
        "maxItems": 0
      },
      "BinaryFileType": {
        "description": "data that is encoded as binary data",
        "type": "string",
        "format": "binary"
      },
      "TimestampType": {
        "description": "UNIX timestamp in milliseconds",
        "type": "integer",
        "minimum": 0
      },
      "PositiveIntegerType": {
        "description": "A positiv Number",
        "type": "integer",
        "minimum": 1
      },
      "SignaturePadType": {
        "type": "string",
        "enum": [
          "checkout",
          "checkin"
        ]
      },
      "TourStatus": {
        "type": "string",
        "enum": [
          "open",
          "sent",
          "closed"
        ]
      },
      "BundleStatus": {
        "type": "string",
        "enum": [
          "open",
          "sent",
          "closed"
        ]
      },
      "EmailAddressType": {
        "description": "String pattern for email address",
        "type": "string",
        "maxLength": 1024
      },
      "Location": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "country",
          "zipCode",
          "city",
          "street"
        ],
        "properties": {
          "country": {
            "$ref": "#/components/schemas/NameType"
          },
          "zipCode": {
            "$ref": "#/components/schemas/NameType"
          },
          "city": {
            "$ref": "#/components/schemas/NameType"
          },
          "street": {
            "$ref": "#/components/schemas/NameType"
          }
        }
      },
      "ExternalTourName": {
        "type": "string",
        "maxLength": 60
      },
      "TwoFaCode": {
        "type": "string",
        "pattern": "^\\d{6}$"
      },
      "ColorType": {
        "type": "string",
        "pattern": "^#[0-9a-f]{6}$",
        "default": "ffffff"
      },
      "OrderNoteNumberAsStringType": {
        "type": "string",
        "maxLength": 60,
        "minLength": 3,
        "pattern": "^\\d{3,}$"
      },
      "DeliveryNoteNumber": {
        "type": "string",
        "maxLength": 60,
        "minLength": 3,
        "pattern": "^[A-Za-z0-9]+$"
      },
      "AttachmentsCount": {
        "type": "number",
        "minimum": 0
      },
      "PhoneNumbersArray": {
        "type": "array",
        "minItems": 1,
        "items": {
          "$ref": "#/components/schemas/NameType"
        }
      },
      "PermissionsType": {
        "description": "for detailed permission descriptions consult the documentation",
        "type": "object",
        "additionalProperties": {
          "type": "boolean"
        }
      },
      "UserPermissionsType": {
        "description": "All user permissions. If set to true user has this permission. This permissions are set directly to the user and operate globally.",
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "service_provider_organizations_create": {
            "type": "boolean",
            "description": "This permission is needed to create organizations",
            "x-roles": [
              "service_provider"
            ]
          },
          "service_provider_organizations_read": {
            "type": "boolean",
            "description": "This permission is needed to read organizations",
            "x-roles": [
              "service_provider"
            ]
          },
          "service_provider_organizations_update": {
            "type": "boolean",
            "description": "This permission is needed to update organizations",
            "x-roles": [
              "service_provider"
            ]
          },
          "service_provider_billing_csv_read": {
            "type": "boolean",
            "description": "This permission is needed to get billing information as csv",
            "x-roles": [
              "service_provider"
            ]
          },
          "service_provider_user_feedbacks_read": {
            "type": "boolean",
            "description": "This permission is needed to get all feedbacks",
            "x-roles": [
              "service_provider"
            ]
          },
          "organization_read": {
            "type": "boolean",
            "description": "This permission is needed for reading all own organizations",
            "x-roles": [
              "service_provider",
              "organization_admin",
              "site_admin",
              "consignor",
              "carrier",
              "consignee"
            ]
          },
          "user_permissions_modify": {
            "type": "boolean",
            "description": "This permission is needed for modifying permissions of a user",
            "x-roles": [
              "organization_admin",
              "site_admin"
            ]
          },
          "user_modify": {
            "type": "boolean",
            "description": "This permission is needed for modifying basic global user information, like name, password or email (of own user)",
            "x-roles": [
              "service_provider",
              "organization_admin",
              "site_admin",
              "consignor",
              "carrier",
              "consignee"
            ]
          },
          "user_signature_replace": {
            "type": "boolean",
            "description": "This permission is needed to replace the user signature",
            "x-roles": [
              "consignee"
            ]
          },
          "user_signature_read": {
            "type": "boolean",
            "description": "This permission is needed to read the user signature",
            "x-roles": [
              "consignee"
            ]
          },
          "user_feedbacks_create": {
            "type": "boolean",
            "description": "This permission is needed to create a feedback entry",
            "x-roles": [
              "service_provider",
              "organization_admin",
              "site_admin",
              "consignor",
              "carrier",
              "consignee"
            ]
          },
          "user_feedbacks_last_modify": {
            "type": "boolean",
            "description": "This permission is needed to modify the date of last feedback",
            "x-roles": [
              "service_provider",
              "organization_admin",
              "site_admin",
              "consignor",
              "carrier",
              "consignee"
            ]
          },
          "user_me_read": {
            "type": "boolean",
            "description": "This permission is needed to read the own user information",
            "x-roles": [
              "service_provider",
              "organization_admin",
              "site_admin",
              "consignee",
              "carrier",
              "consignor",
              "remote_consignor",
              "remote_carrier",
              "remote_consignee"
            ]
          }
        }
      },
      "OrganizationPermissionsType": {
        "description": "all organization permissions. If set to true user has this permission for the organization",
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "administration_users_create": {
            "type": "boolean",
            "description": "This permission is needed to create a user for the calling user's organization",
            "x-roles": [
              "organization_admin"
            ]
          },
          "administration_users_read": {
            "type": "boolean",
            "description": "This permission is needed to get all users of the calling user's organization",
            "x-roles": [
              "organization_admin"
            ]
          },
          "administration_users_modify": {
            "type": "boolean",
            "description": "This permission is needed to modify a user for the calling user's organization",
            "x-roles": [
              "organization_admin"
            ]
          },
          "administration_organization_sites_create": {
            "type": "boolean",
            "description": "This permission is needed to create new sites for the organization",
            "x-roles": [
              "organization_admin"
            ]
          },
          "administration_organization_sites_read": {
            "type": "boolean",
            "description": "This permission is needed to read all sites of an organization",
            "x-roles": [
              "organization_admin"
            ]
          },
          "loadcarrier_templates_read": {
            "type": "boolean",
            "description": "This permission is needed for getting all permitted load carrier types",
            "x-roles": [
              "service_provider",
              "organization_admin",
              "consignor",
              "consignee",
              "remote_consignor",
              "remote_consignee"
            ]
          },
          "organization_read": {
            "type": "boolean",
            "description": "This permission is needed for reading this organization",
            "x-roles": [
              "service_provider",
              "organization_admin"
            ]
          },
          "organization_modify": {
            "type": "boolean",
            "description": "This permission is needed for modifying the specific organization",
            "x-roles": [
              "service_provider"
            ]
          },
          "organization_delete": {
            "type": "boolean",
            "description": "This permission is needed for deleting the specific organization",
            "x-roles": [
              "service_provider"
            ]
          },
          "user_organization_permissions_modify": {
            "type": "boolean",
            "description": "This permission is needed for modifying permissions of a user on organization level",
            "x-roles": [
              "service_provider",
              "organization_admin"
            ]
          },
          "user_assign": {
            "type": "boolean",
            "description": "This permission is needed for assigning users to the organization",
            "x-roles": [
              "service_provider"
            ]
          },
          "user_unassign": {
            "type": "boolean",
            "description": "This permission is needed for unassigning users from the organization",
            "x-roles": [
              "organization_admin"
            ]
          },
          "users_create": {
            "type": "boolean",
            "description": "This permission is needed to create a new user and add this user to the organization",
            "x-roles": [
              "service_provider",
              "organization_admin"
            ]
          },
          "user_delete": {
            "type": "boolean",
            "description": "This permission is need for deleting users from a organization",
            "x-roles": [
              "organization_admin"
            ]
          },
          "api_keys_create": {
            "type": "boolean",
            "description": "The permission to create API keys",
            "x-roles": [
              "organization_admin"
            ]
          },
          "api_keys_read": {
            "type": "boolean",
            "description": "The permission to read API keys",
            "x-roles": [
              "organization_admin"
            ]
          },
          "api_keys_modify": {
            "type": "boolean",
            "description": "The permission to modify API keys",
            "x-roles": [
              "organization_admin"
            ]
          }
        }
      },
      "OrganizationSitePermissionsType": {
        "description": "all organization site permissions. If set to true user has this permission for the organization site",
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "administration_organization_sites_archive": {
            "type": "boolean",
            "description": "This permission is needed to archive the specified organization site",
            "x-roles": [
              "organization_admin"
            ]
          },
          "administration_organization_sites_modify": {
            "type": "boolean",
            "description": "This permission is needed for modifying the site of an organization",
            "x-roles": [
              "organization_admin",
              "site_admin"
            ]
          },
          "administration_organization_sites_remote_access_create": {
            "type": "boolean",
            "description": "This permission is needed to authorize remote sites to access a site",
            "x-roles": [
              "organization_admin",
              "site_admin"
            ]
          },
          "administration_organization_sites_remote_access_read": {
            "type": "boolean",
            "description": "This permissions is needed to get a list with all remote sites that have access to this site",
            "x-roles": [
              "organization_admin",
              "site_admin"
            ]
          },
          "administration_organization_sites_remote_access_delete": {
            "type": "boolean",
            "description": "This permission is needed to remove authorization of remote sites to access a site",
            "x-roles": [
              "organization_admin",
              "site_admin"
            ]
          },
          "administration_organization_sites_users_read": {
            "type": "boolean",
            "description": "This permission is needed to read all users of sites of an organization",
            "x-roles": [
              "organization_admin",
              "site_admin"
            ]
          },
          "administration_organization_sites_users_create": {
            "type": "boolean",
            "description": "This permission is needed to create a users for a organization site",
            "x-roles": [
              "organization_admin",
              "site_admin"
            ]
          },
          "administration_organization_sites_users_modify": {
            "type": "boolean",
            "description": "This permission is needed to modify a users for a organization site",
            "x-roles": [
              "organization_admin",
              "site_admin"
            ]
          },
          "user_assign": {
            "type": "boolean",
            "description": "This permission is needed for assigning users to an organization site",
            "x-roles": [
              "organization_admin",
              "site_admin"
            ]
          },
          "user_unassign": {
            "type": "boolean",
            "description": "This permission is needed for unassigning users from the organization site",
            "x-roles": [
              "organization_admin",
              "site_admin"
            ]
          },
          "user_organization_site_permissions_modify": {
            "type": "boolean",
            "description": "This permission is needed for modifying permissions of a user on organization site level",
            "x-roles": [
              "organization_admin",
              "site_admin"
            ]
          },
          "loadcarrier_read": {
            "type": "boolean",
            "description": "This permission is needed for getting all permitted load carriers",
            "x-roles": [
              "consignor",
              "remote_consignor"
            ]
          },
          "loadcarrier_create": {
            "type": "boolean",
            "description": "This permission is needed for creating a new load carrier",
            "x-roles": [
              "consignor"
            ]
          },
          "loadcarrier_delete": {
            "type": "boolean",
            "description": "This permission is needed for deleting a load carrier",
            "x-roles": [
              "consignor"
            ]
          },
          "loadcarrier_modify": {
            "type": "boolean",
            "description": "This permission is needed for modifying a load carrier",
            "x-roles": [
              "consignor"
            ]
          },
          "consignee_load_carriers_create": {
            "type": "boolean",
            "description": "This permission is needed to create new consignee load carriers",
            "x-roles": [
              "consignee"
            ]
          },
          "consignee_load_carriers_replace": {
            "type": "boolean",
            "description": "This permission is needed to replace all consignee load carriers with new ones",
            "x-roles": [
              "consignee"
            ]
          },
          "consignee_load_carriers_read": {
            "type": "boolean",
            "description": "This permission is needed to get all consignee load carriers",
            "x-roles": [
              "consignee",
              "remote_consignee"
            ]
          },
          "consignee_discrepancies_create": {
            "type": "boolean",
            "description": "This permission is needed to create new consignee discrepancies",
            "x-roles": [
              "consignee"
            ]
          },
          "consignee_discrepancies_read": {
            "type": "boolean",
            "description": "This permission is needed to read consignee discrepancies",
            "x-roles": [
              "consignee",
              "remote_consignee"
            ]
          },
          "consignee_discrepancies_update": {
            "type": "boolean",
            "description": "This permission is needed to update consignee discrepancies",
            "x-roles": [
              "consignee"
            ]
          },
          "consignee_discrepancies_replace": {
            "type": "boolean",
            "description": "This permission is needed to replace all consignee discrepancies with new ones",
            "x-roles": [
              "consignee"
            ]
          },
          "consignee_discrepancies_delete": {
            "type": "boolean",
            "description": "This permission is needed to delete consignee discrepancies",
            "x-roles": [
              "consignee"
            ]
          },
          "attachment_create": {
            "type": "boolean",
            "description": "This permission is needed for creating a new attachment",
            "x-roles": [
              "consignor"
            ]
          },
          "attachment_read": {
            "type": "boolean",
            "description": "This permission is needed for getting all permitted attachments",
            "x-roles": [
              "consignor",
              "remote_consignor"
            ]
          },
          "attachment_delete": {
            "type": "boolean",
            "description": "This permission is needed for deleting a attachment",
            "x-roles": [
              "consignor"
            ]
          },
          "consignee_discrepancy_images_create": {
            "type": "boolean",
            "description": "This permission is needed for creating a new discrepancy image",
            "x-roles": [
              "consignee"
            ]
          },
          "consignee_discrepancy_images_read": {
            "type": "boolean",
            "description": "This permission is needed for reading a discrepancy image",
            "x-roles": [
              "consignee",
              "remote_consignee"
            ]
          },
          "consignee_discrepancy_images_delete": {
            "type": "boolean",
            "description": "This permission is needed for deleting a discrepancy image",
            "x-roles": [
              "consignee"
            ]
          },
          "consignee_load_carrier_file_create": {
            "type": "boolean",
            "description": "This permission is needed for creating a new load carrier file",
            "x-roles": [
              "consignee"
            ]
          },
          "consignee_load_carrier_file_read": {
            "type": "boolean",
            "description": "This permission is needed for reading a load carrier file",
            "x-roles": [
              "consignee",
              "remote_consignee"
            ]
          },
          "consignee_load_carrier_file_delete": {
            "type": "boolean",
            "description": "This permission is needed for deleting a load carrier file",
            "x-roles": [
              "consignee"
            ]
          },
          "consignee_receipts_create": {
            "type": "boolean",
            "description": "This permission is needed for creating a new consignee receipts",
            "x-roles": [
              "consignee"
            ]
          },
          "consignee_receipts_read": {
            "type": "boolean",
            "description": "This permission is needed for reading a consignee receipts",
            "x-roles": [
              "consignee",
              "remote_consignee"
            ]
          },
          "consignee_receipts_delete": {
            "type": "boolean",
            "description": "This permission is needed for deleting a consignee receipts",
            "x-roles": [
              "consignee"
            ]
          },
          "discrepancies_create": {
            "type": "boolean",
            "description": "This permission is needed for creating a new discrepancy",
            "x-roles": [
              "consignee"
            ]
          },
          "discrepancies_update": {
            "type": "boolean",
            "description": "This permission is needed for getting all permitted discrepancies",
            "x-roles": [
              "consignee"
            ]
          },
          "discrepancies_read": {
            "type": "boolean",
            "description": "This permission is needed for getting all permitted discrepancies",
            "x-roles": [
              "consignee",
              "remote_consignee"
            ]
          },
          "discrepancies_delete": {
            "type": "boolean",
            "description": "This permission is needed for deleting a discrepancy",
            "x-roles": [
              "consignee"
            ]
          },
          "consignee_fine_discrepancies_create": {
            "type": "boolean",
            "description": "This permission is needed for creating a new fine discrepancy",
            "x-roles": [
              "consignee"
            ]
          },
          "consignee_fine_discrepancies_read": {
            "type": "boolean",
            "description": "This permission is needed for getting all permitted fine discrepancies",
            "x-roles": [
              "consignee",
              "remote_consignee"
            ]
          },
          "consignee_fine_discrepancies_delete": {
            "type": "boolean",
            "description": "This permission is needed for deleting a fine discrepancy",
            "x-roles": [
              "consignee"
            ]
          },
          "delivery_note_bundles_create": {
            "type": "boolean",
            "description": "user can create delivery note bundles",
            "x-roles": [
              "consignor"
            ]
          },
          "delivery_note_bundles_read": {
            "type": "boolean",
            "description": "user can read delivery note bundles",
            "x-roles": [
              "consignor",
              "carrier",
              "consignee",
              "remote_consignor",
              "remote_carrier",
              "remote_consignee"
            ]
          },
          "delivery_note_bundles_update": {
            "type": "boolean",
            "description": "user can update delivery note bundles",
            "x-roles": [
              "consignor"
            ]
          },
          "delivery_note_bundles_delete": {
            "type": "boolean",
            "description": "user can delete delivery note bundles",
            "x-roles": [
              "consignor"
            ]
          },
          "delivery_note_bundles_merge": {
            "type": "boolean",
            "description": "User can merge multiple delivery note bundles into a new one",
            "x-roles": [
              "consignor"
            ]
          },
          "delivery_note_bundles_checkout": {
            "type": "boolean",
            "description": "User can checkout a delivery note bundle",
            "x-roles": [
              "consignor"
            ]
          },
          "delivery_note_bundles_checkout_multiple": {
            "type": "boolean",
            "description": "User can checkout multiple delivery note bundles at once",
            "x-roles": [
              "consignor"
            ]
          },
          "delivery_note_bundles_checkin": {
            "type": "boolean",
            "description": "User can checkin multiple delivery note bundles at once",
            "x-roles": [
              "consignee"
            ]
          },
          "send_wallet_invite_emails": {
            "type": "boolean",
            "description": "User can send the wallet invite link to an email address.",
            "x-roles": [
              "consignor",
              "carrier"
            ]
          },
          "carrier_tours_create": {
            "type": "boolean",
            "description": "user can create a new tour",
            "x-roles": [
              "carrier"
            ]
          },
          "carrier_tours_read": {
            "type": "boolean",
            "description": "user can read site tours",
            "x-roles": [
              "carrier",
              "remote_carrier"
            ]
          },
          "carrier_tours_update": {
            "type": "boolean",
            "description": "user can update a tour",
            "x-roles": [
              "carrier"
            ]
          },
          "carrier_tours_delete": {
            "type": "boolean",
            "description": "user can delete a tour",
            "x-roles": [
              "carrier"
            ]
          },
          "carrier_tours_checkout": {
            "type": "boolean",
            "description": "user can checkout a tour",
            "x-roles": [
              "carrier"
            ]
          },
          "consignee_tour_read": {
            "type": "boolean",
            "description": "consignee can read incoming tours",
            "x-roles": [
              "consignee",
              "remote_consignee"
            ]
          },
          "carrier_delivery_notes_share_rights": {
            "type": "boolean",
            "description": "Shares the rights of delivery notes to another carrier site",
            "x-roles": [
              "carrier"
            ]
          },
          "carrier_delivery_notes_read": {
            "type": "boolean",
            "description": "user can read pdf file from a delivery note bundle",
            "x-roles": [
              "carrier"
            ]
          },
          "delivery_notes_create": {
            "type": "boolean",
            "description": "user can add new pdf file to a delivery note bundle",
            "x-roles": [
              "consignor"
            ]
          },
          "delivery_notes_read": {
            "type": "boolean",
            "description": "user can read pdf file from a delivery note bundle",
            "x-roles": [
              "consignor",
              "carrier",
              "consignee",
              "remote_consignor",
              "remote_carrier",
              "remote_consignee"
            ]
          },
          "delivery_notes_update": {
            "type": "boolean",
            "description": "user can update the metadata from a delivery note",
            "x-roles": [
              "consignor"
            ]
          },
          "delivery_notes_delete": {
            "type": "boolean",
            "description": "user can delete delivery notes (pdfs)",
            "x-roles": [
              "consignor"
            ]
          },
          "delivery_notes_add_to_bundle": {
            "type": "boolean",
            "description": "User can add existing delivery notes to an existing delivery note bundle.",
            "x-roles": [
              "consignor"
            ]
          },
          "delivery_notes_in_bundles_delete": {
            "type": "boolean",
            "description": "user can delete delivery notes (pdf) in bundles",
            "x-roles": [
              "consignor"
            ]
          },
          "consignor_delivery_notes_complete_pdf_read": {
            "type": "boolean",
            "description": "User can read a compelte pdf from a delivery note.",
            "x-roles": [
              "consignor",
              "remote_consignor"
            ]
          },
          "carrier_delivery_notes_complete_pdf_read": {
            "type": "boolean",
            "description": "User can read a compelte pdf from a delivery note.",
            "x-roles": [
              "carrier",
              "remote_carrier"
            ]
          },
          "consignee_delivery_notes_complete_pdf_read": {
            "type": "boolean",
            "description": "User can read a compelte pdf from a delivery note.",
            "x-roles": [
              "consignee",
              "remote_consignee"
            ]
          },
          "carrier_delivery_note_keys_lookup": {
            "type": "boolean",
            "description": "User can lookup as a carrier organization site delivery note keys by consignor gln, deliveryNote number and optional deliveryNote orderNumber",
            "x-roles": [
              "carrier"
            ]
          },
          "consignee_checkins_create": {
            "type": "boolean",
            "description": "User can create a checkin",
            "x-roles": [
              "consignee"
            ]
          },
          "consignee_checkins_read": {
            "type": "boolean",
            "description": "User can get a checkin document.",
            "x-roles": [
              "consignee"
            ]
          },
          "consignee_checkins_finish": {
            "type": "boolean",
            "description": "User can finish a checkin",
            "x-roles": [
              "consignee"
            ]
          },
          "consignee_checkin_driver_details_update": {
            "type": "boolean",
            "description": "User can set driver information of checkins",
            "x-roles": [
              "consignee"
            ]
          },
          "consignee_delivery_notes_lookup_with_token": {
            "type": "boolean",
            "description": "User can get a list of checkinable delivery notes by wallet token",
            "x-roles": [
              "consignee"
            ]
          },
          "consignee_pallet_tickets_create": {
            "type": "boolean",
            "description": "This permission is needed to create a pallet ticket",
            "x-roles": [
              "consignee"
            ]
          },
          "consignee_pallet_tickets_read": {
            "type": "boolean",
            "description": "This permission is needed to read a pallet ticket",
            "x-roles": [
              "consignee",
              "remote_consignee"
            ]
          },
          "consignee_pallet_tickets_delete": {
            "type": "boolean",
            "description": "This permission is needed to delete a pallet ticket",
            "x-roles": [
              "consignee"
            ]
          },
          "signature_pads_create": {
            "type": "boolean",
            "description": "create a new signature pad for checkout or checkin",
            "x-roles": [
              "consignor",
              "consignee"
            ]
          },
          "signature_pads_read": {
            "type": "boolean",
            "description": "read data from a signature pad",
            "x-roles": [
              "consignor",
              "consignee"
            ]
          }
        }
      },
      "OrganizationSiteOptionsType": {
        "description": "All organization site options",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "allow_bundle_creation_with_loose_supply_chains": {
            "type": "boolean",
            "description": "Allows the creation of bundles with loose supply chains."
          }
        }
      },
      "Token64LengthType": {
        "description": "Token with length 64. Used in different requests.",
        "type": "string",
        "pattern": "^[a-f0-9]{64}$"
      },
      "Token64LengthXorEmptyType": {
        "type": "string",
        "pattern": "^(?![\\s\\S])$|^[a-f0-9]{64}$"
      },
      "Base64Type": {
        "type": "string"
      },
      "Base64ArrayType": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Base64Type"
        }
      },
      "PasswordType": {
        "type": "string",
        "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d\\S]{10,}$",
        "maxLength": 1000
      },
      "OrgNameType": {
        "type": "string",
        "maxLength": 1024,
        "minLength": 3
      },
      "FileTypes": {
        "type": "string",
        "enum": [
          "application/pdf",
          "image/heic",
          "image/heif",
          "image/jpeg",
          "image/png"
        ]
      },
      "AttachmentBlobTypes": {
        "type": "string",
        "enum": [
          "discrepancy",
          "discrepancy_fine",
          "load_carrier",
          "pallet_ticket",
          "receipt"
        ]
      },
      "UserRoles": {
        "type": "string",
        "enum": [
          "carrier",
          "consignee",
          "consignor",
          "organization_admin",
          "site_admin",
          "remote_consignor",
          "remote_consignee",
          "remote_carrier"
        ]
      },
      "UserRolesArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UserRoles"
        }
      },
      "UserRolesForSiteAdmin": {
        "type": "string",
        "enum": [
          "carrier",
          "consignee",
          "consignor",
          "site_admin"
        ]
      },
      "UserRolesForSiteAdminArray": {
        "type": "array",
        "minItems": 1,
        "maxItems": 4,
        "items": {
          "$ref": "#/components/schemas/UserRolesForSiteAdmin"
        }
      },
      "UserRemoteRoles": {
        "type": "string",
        "enum": [
          "remote_consignor",
          "remote_consignee",
          "remote_carrier"
        ]
      },
      "UserRemoteRolesArray": {
        "type": "array",
        "minItems": 1,
        "maxItems": 3,
        "items": {
          "$ref": "#/components/schemas/UserRemoteRoles"
        }
      }
    },
    "parameters": {
      "organizationKeyParam": {
        "in": "path",
        "name": "organizationKey",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/KeyType"
        }
      },
      "organizationSiteKeyParam": {
        "in": "path",
        "name": "organizationSiteKey",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/KeyType"
        }
      },
      "tourKeyParam": {
        "in": "path",
        "name": "tourKey",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/KeyType"
        }
      },
      "loadCarrierTemplateKeyParam": {
        "in": "path",
        "name": "loadCarrierTemplateKey",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/KeyType"
        }
      },
      "loadCarrierKeyParam": {
        "in": "path",
        "name": "loadCarrierKey",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/KeyType"
        }
      },
      "attachmentKeyParam": {
        "in": "path",
        "name": "attachmentKey",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/KeyType"
        }
      },
      "palletTicketKeyParam": {
        "in": "path",
        "name": "palletTicketKey",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/KeyType"
        }
      },
      "discrepancyKeyParam": {
        "in": "path",
        "name": "discrepancyKey",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/KeyType"
        }
      },
      "deliveryNoteBundleKeyParam": {
        "in": "path",
        "name": "deliveryNoteBundleKey",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/KeyType"
        }
      },
      "deliveryNoteKeyParam": {
        "in": "path",
        "name": "deliveryNoteKey",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/KeyType"
        }
      },
      "fileNameParam": {
        "in": "path",
        "name": "fileName",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "supplyChainKeyParam": {
        "in": "path",
        "name": "supplyChainKey",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/KeyType"
        }
      },
      "targetOrganizationSiteKeyParam": {
        "in": "path",
        "name": "targetOrganizationSiteKey",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/KeyType"
        }
      },
      "userKeyParam": {
        "in": "path",
        "name": "userKey",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/KeyType"
        }
      },
      "consigneeKeyParam": {
        "in": "path",
        "name": "consigneeKey",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/KeyType"
        }
      },
      "SignaturePadTypeParam": {
        "in": "path",
        "name": "signaturePadType",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/SignaturePadType"
        }
      },
      "checkinKeyParam": {
        "in": "path",
        "name": "checkinKey",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/KeyType"
        }
      },
      "TokenTypeParam": {
        "in": "query",
        "required": true,
        "name": "token",
        "schema": {
          "$ref": "#/components/schemas/Token64LengthType"
        }
      },
      "HasDiscrepancyTypeParam": {
        "in": "query",
        "required": true,
        "name": "discrepancy",
        "schema": {
          "type": "boolean"
        }
      },
      "FromTimestampTypeParam": {
        "in": "query",
        "required": true,
        "name": "from",
        "schema": {
          "$ref": "#/components/schemas/TimestampType"
        }
      },
      "ToTimestampTypeParam": {
        "in": "query",
        "required": true,
        "name": "to",
        "schema": {
          "$ref": "#/components/schemas/TimestampType"
        }
      },
      "ZipTypeParam": {
        "in": "query",
        "required": false,
        "name": "zip",
        "schema": {
          "type": "boolean"
        }
      },
      "MonthAndYearTimestampTypeParam": {
        "in": "query",
        "required": true,
        "name": "yearMonth",
        "schema": {
          "$ref": "#/components/schemas/TimestampType"
        }
      }
    },
    "requestBodies": {
      "PDFFileRequest": {
        "required": true,
        "content": {
          "application/pdf": {
            "schema": {
              "$ref": "#/components/schemas/BinaryFileType"
            }
          }
        }
      },
      "PNGFileRequest": {
        "required": true,
        "content": {
          "image/png": {
            "schema": {
              "$ref": "#/components/schemas/BinaryFileType"
            }
          }
        }
      },
      "AttachmentFile": {
        "required": true,
        "content": {
          "application/pdf": {
            "schema": {
              "$ref": "#/components/schemas/BinaryFileType"
            }
          },
          "image/heic": {
            "schema": {
              "$ref": "#/components/schemas/BinaryFileType"
            }
          },
          "image/heif": {
            "schema": {
              "$ref": "#/components/schemas/BinaryFileType"
            }
          },
          "image/jpeg": {
            "schema": {
              "$ref": "#/components/schemas/BinaryFileType"
            }
          },
          "image/png": {
            "schema": {
              "$ref": "#/components/schemas/BinaryFileType"
            }
          }
        }
      },
      "AttachmentImageFile": {
        "required": true,
        "content": {
          "image/heic": {
            "schema": {
              "$ref": "#/components/schemas/BinaryFileType"
            }
          },
          "image/heif": {
            "schema": {
              "$ref": "#/components/schemas/BinaryFileType"
            }
          },
          "image/jpeg": {
            "schema": {
              "$ref": "#/components/schemas/BinaryFileType"
            }
          },
          "image/png": {
            "schema": {
              "$ref": "#/components/schemas/BinaryFileType"
            }
          }
        }
      },
      "MergeDeliveryNoteBundle": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/KeyArrayType"
            }
          }
        }
      }
    },
    "responses": {
      "PNGFileResponse": {
        "description": "Returns a png file",
        "content": {
          "image/png": {
            "schema": {
              "$ref": "#/components/schemas/BinaryFileType"
            }
          }
        }
      },
      "PDFFileResponse": {
        "description": "Returns a pdf file",
        "content": {
          "application/pdf": {
            "schema": {
              "$ref": "#/components/schemas/BinaryFileType"
            }
          }
        }
      },
      "CSVFileResponse": {
        "description": "Returns a csv file",
        "content": {
          "text/csv": {
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "DefaultErrorResponse": {
        "description": "Default error response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "errorMessage"
              ],
              "properties": {
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "dlssessionid",
        "description": "API-keys and session ids are used as synonyms. The only difference is that an API-key is not able to log himself out. Otherwise it would be destroyed.\n"
      }
    }
  },
  "tags": [
    {
      "name": "administration",
      "description": "Endpoints to handle organization administration funcitons"
    },
    {
      "name": "attachments",
      "description": "Endpoints to handle attachments to load carriers"
    },
    {
      "name": "authentication",
      "description": "Endpoints to login and logout"
    },
    {
      "name": "checkins",
      "description": "Endpoints"
    },
    {
      "name": "delivery note bundles",
      "description": "Endpoints to handle bundles"
    },
    {
      "name": "delivery notes",
      "description": "Endpoints to handle single delivery notes"
    },
    {
      "name": "discrepancies",
      "description": "Endpoints to manage discrepancies which are registered during checkin"
    },
    {
      "name": "external",
      "description": "Endpoints accessable through tokens instead of a login"
    },
    {
      "name": "load carrier templates",
      "description": "Endpoints to manage load carrier templates (types)"
    },
    {
      "name": "load carriers",
      "description": "Endpoints to manage load carriers"
    },
    {
      "name": "organization sites",
      "description": "Endpoints which manipulate data and grant acces to it on organization site level"
    },
    {
      "name": "organizations",
      "description": "Endpoints which manipulate data and grant acces to it on organization level"
    },
    {
      "name": "pdf",
      "description": "Endpoints for PDF file acces and upload"
    },
    {
      "name": "platform",
      "description": "Endpoints that can be accesssed by every logged in user"
    },
    {
      "name": "public",
      "description": "Endpoints which are accessable without authentication"
    },
    {
      "name": "signature pads",
      "description": "Endpoints to post and access signature pads"
    },
    {
      "name": "users",
      "description": "Endpoints to manage users"
    },
    {
      "name": "wallet invite",
      "description": "Endpoints regarding the wallet invite page"
    },
    {
      "name": "wallet invite notification",
      "description": "Endpoint to send the wallet invite via email"
    }
  ]
}